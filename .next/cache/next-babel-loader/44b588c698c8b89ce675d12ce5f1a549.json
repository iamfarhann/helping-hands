{"ast":null,"code":"var _jsxFileName = \"/Users/mahad/Local Disk/FYP-FE/helping-hands/common/src/components/HelpingHands/OrganizationList.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useData, useDispatchUser } from \"../../../../lib/userData\";\nimport Text from \"../Text\";\nimport { GET_PORTFOLIOS } from \"../../../../lib/queries\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport moment from \"moment\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    overflow: \"auto\",\n    maxHeight: \"460px\",\n    backgroundColor: theme.palette.background.paper\n  },\n  inline: {\n    display: \"inline\"\n  }\n}));\nexport default function AlignItemsList() {\n  const classes = useStyles();\n  const donor = useData();\n  const {\n    data,\n    loading,\n    error,\n    refetch\n  } = useQuery(GET_PORTFOLIOS, {\n    variables: {\n      where: {\n        donor: donor ? donor.id : \"\"\n      },\n      sort: \"createdAt:desc\",\n      start: 0,\n      limit: null\n    } //skip: !project,\n\n  });\n  return __jsx(List, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, data ? data.portfolios.map(portfolio => {\n    return __jsx(React.Fragment, null, __jsx(ListItem, {\n      alignItems: \"flex-start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }\n    }, __jsx(ListItemAvatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, __jsx(Avatar, {\n      alt: portfolio.organization.organizationName,\n      src: portfolio.organization.profilePicture ? `${process.env.PLAIN_URL}${portfolio.organization.profilePicture.url}` : null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 19\n      }\n    })), __jsx(ListItemText, {\n      primary: portfolio.organization.organizationName,\n      secondary: __jsx(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }\n      }, __jsx(Typography, {\n        component: \"span\",\n        variant: \"body2\",\n        className: classes.inline,\n        color: \"textPrimary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 23\n        }\n      }, `Rs. ${portfolio.paymentSize}`), ` â€” ${portfolio.period}`),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    })), __jsx(Divider, {\n      variant: \"inset\",\n      component: \"li\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 15\n      }\n    }));\n  }) : __jsx(React.Fragment, null, __jsx(ListItem, {\n    alignItems: \"flex-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, __jsx(ListItemAvatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, __jsx(Skeleton, {\n    animation: \"wave\",\n    variant: \"circle\",\n    width: 40,\n    height: 40,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  })), __jsx(ListItemText, {\n    disableTypography: true,\n    primary: __jsx(Skeleton, {\n      animation: \"wave\",\n      height: 10,\n      width: \"80%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 24\n      }\n    }),\n    secondary: __jsx(Skeleton, {\n      animation: \"wave\",\n      height: 10,\n      width: \"60%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 26\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  })), __jsx(ListItem, {\n    alignItems: \"flex-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, __jsx(ListItemAvatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, __jsx(Skeleton, {\n    animation: \"wave\",\n    variant: \"circle\",\n    width: 40,\n    height: 40,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  })), __jsx(ListItemText, {\n    disableTypography: true,\n    primary: __jsx(Skeleton, {\n      animation: \"wave\",\n      height: 10,\n      width: \"80%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 24\n      }\n    }),\n    secondary: __jsx(Skeleton, {\n      animation: \"wave\",\n      height: 10,\n      width: \"60%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 26\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  })), __jsx(ListItem, {\n    alignItems: \"flex-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, __jsx(ListItemAvatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, __jsx(Skeleton, {\n    animation: \"wave\",\n    variant: \"circle\",\n    width: 40,\n    height: 40,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 15\n    }\n  })), __jsx(ListItemText, {\n    disableTypography: true,\n    primary: __jsx(Skeleton, {\n      animation: \"wave\",\n      height: 10,\n      width: \"80%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 24\n      }\n    }),\n    secondary: __jsx(Skeleton, {\n      animation: \"wave\",\n      height: 10,\n      width: \"60%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 26\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/mahad/Local Disk/FYP-FE/helping-hands/common/src/components/HelpingHands/OrganizationList.js"],"names":["React","makeStyles","List","ListItem","Divider","ListItemText","ListItemAvatar","Avatar","Typography","useData","useDispatchUser","Text","GET_PORTFOLIOS","useQuery","useMutation","moment","Skeleton","useStyles","theme","root","width","overflow","maxHeight","backgroundColor","palette","background","paper","inline","display","AlignItemsList","classes","donor","data","loading","error","refetch","variables","where","id","sort","start","limit","portfolios","map","portfolio","organization","organizationName","profilePicture","process","env","PLAIN_URL","url","paymentSize","period"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport { useData, useDispatchUser } from \"../../../../lib/userData\";\n\nimport Text from \"../Text\";\nimport { GET_PORTFOLIOS } from \"../../../../lib/queries\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport moment from \"moment\";\n\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n\n    overflow: \"auto\",\n    maxHeight: \"460px\",\n    backgroundColor: theme.palette.background.paper,\n  },\n  inline: {\n    display: \"inline\",\n  },\n}));\n\nexport default function AlignItemsList() {\n  const classes = useStyles();\n  const donor = useData();\n  const { data, loading, error, refetch } = useQuery(GET_PORTFOLIOS, {\n    variables: {\n      where: { donor: donor ? donor.id : \"\" },\n      sort: \"createdAt:desc\",\n      start: 0,\n      limit: null,\n    },\n    //skip: !project,\n  });\n\n  return (\n    <List className={classes.root}>\n      {data ? (\n        data.portfolios.map((portfolio) => {\n          return (\n            <>\n              <ListItem alignItems=\"flex-start\">\n                <ListItemAvatar>\n                  <Avatar\n                    alt={portfolio.organization.organizationName}\n                    src={\n                      portfolio.organization.profilePicture\n                        ? `${process.env.PLAIN_URL}${portfolio.organization.profilePicture.url}`\n                        : null\n                    }\n                  />\n                </ListItemAvatar>\n                <ListItemText\n                  primary={portfolio.organization.organizationName}\n                  secondary={\n                    <React.Fragment>\n                      <Typography\n                        component=\"span\"\n                        variant=\"body2\"\n                        className={classes.inline}\n                        color=\"textPrimary\"\n                      >\n                        {`Rs. ${portfolio.paymentSize}`}\n                      </Typography>\n                      {` â€” ${portfolio.period}`}\n                    </React.Fragment>\n                  }\n                />\n              </ListItem>\n              <Divider variant=\"inset\" component=\"li\" />\n            </>\n          );\n        })\n      ) : (\n        <>\n          <ListItem alignItems=\"flex-start\">\n            <ListItemAvatar>\n              <Skeleton\n                animation=\"wave\"\n                variant=\"circle\"\n                width={40}\n                height={40}\n              />\n            </ListItemAvatar>\n            <ListItemText\n              disableTypography\n              primary={<Skeleton animation=\"wave\" height={10} width=\"80%\" />}\n              secondary={<Skeleton animation=\"wave\" height={10} width=\"60%\" />}\n            />\n          </ListItem>\n          <ListItem alignItems=\"flex-start\">\n            <ListItemAvatar>\n              <Skeleton\n                animation=\"wave\"\n                variant=\"circle\"\n                width={40}\n                height={40}\n              />\n            </ListItemAvatar>\n            <ListItemText\n              disableTypography\n              primary={<Skeleton animation=\"wave\" height={10} width=\"80%\" />}\n              secondary={<Skeleton animation=\"wave\" height={10} width=\"60%\" />}\n            />\n          </ListItem>\n          <ListItem alignItems=\"flex-start\">\n            <ListItemAvatar>\n              <Skeleton\n                animation=\"wave\"\n                variant=\"circle\"\n                width={40}\n                height={40}\n              />\n            </ListItemAvatar>\n            <ListItemText\n              disableTypography\n              primary={<Skeleton animation=\"wave\" height={10} width=\"80%\" />}\n              secondary={<Skeleton animation=\"wave\" height={10} width=\"60%\" />}\n            />\n          </ListItem>\n        </>\n      )}\n    </List>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}