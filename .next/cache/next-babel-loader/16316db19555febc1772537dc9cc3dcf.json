{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatchUser, useData } from \"./userData.js\";\nimport cookie from \"js-cookie\";\nimport { useQuery, useMutation, useLazyQuery } from \"@apollo/react-hooks\";\nimport { INITIALIZATION_QUERY, DONOR_INFO, ORGANIZATION_INFO } from \"./queries\";\nimport { useRouter } from \"next/router\";\nexport default function CookieChecker(props) {\n  const user = useData();\n  const dispatch = useDispatchUser();\n  const token = cookie.get(\"token\");\n  const router = useRouter();\n  const {\n    0: loggedIn,\n    1: setLoginIn\n  } = useState(false);\n  const [getData, {\n    data\n  }] = useLazyQuery(INITIALIZATION_QUERY, {\n    fetchPolicy: \"no-cache\"\n  });\n  const [getDonor, {\n    data: donorInfo\n  }] = useLazyQuery(DONOR_INFO, {\n    fetchPolicy: \"no-cache\"\n  });\n  const [getOrganization, {\n    data: organizationInfo\n  }] = useLazyQuery(ORGANIZATION_INFO, {\n    fetchPolicy: \"no-cache\"\n  });\n  useEffect(() => {\n    console.log(\"called\");\n\n    if (user[\"id\"] && token && data) {\n      setLoginIn(true);\n      console.log(\"im hereeeeeee\"); // if (data.me.role.name == \"Donor\") {\n      //   router.push(\"/account\");\n      // }\n      // if (data.me.role.name == \"Organization\") {\n      //   router.push(\"/account_o\");\n      // }\n    }\n\n    if (token && !data) {\n      console.log(\"im here\");\n      getData();\n    }\n\n    if (data && (!donorInfo || !organizationInfo) && !user[\"id\"]) {\n      console.log(\"say hello\");\n      console.log(data, \"data\"); // console.log(data.me.id);\n\n      if (data.me.role.name == \"Donor\") {\n        getDonor({\n          variables: {\n            fields: {\n              user: data.me.id\n            }\n          }\n        });\n      }\n\n      if (data.me.role.name == \"Organization\") {\n        getOrganization({\n          variables: {\n            fields: {\n              user: data.me.id\n            }\n          }\n        });\n      }\n    }\n\n    if (!user[\"id\"] && !token) {\n      setLoginIn(false); // router.push(\"/login\");\n    }\n\n    if (donorInfo && !user[\"id\"]) {\n      console.log(donorInfo); //   if (donorInfo[\"donors\"]) {\n      //     if (!donorInfo.donors.length) {\n      //       router.push(\"/login\");\n      //     } else {\n\n      dispatch({\n        type: \"LOGIN\",\n        payload: donorInfo.donors[0]\n      }); //router.push(\"/account\");\n      //     }\n      //   } else {\n      //     router.push(\"/login\");\n      //   }\n      // router.push(\"/\");\n    }\n\n    if (organizationInfo && !user[\"id\"]) {\n      console.log(organizationInfo); //   if (organizationInfo[\"organizations\"]) {\n      //     if (!organizationInfo.organizations.length) {\n      //       router.push(\"/login\");\n      //     } else {\n      //       console.log(organizationInfo);\n\n      dispatch({\n        type: \"LOGIN\",\n        payload: organizationInfo.organizations[0]\n      }); //router.push(\"/account_o\");\n      //     }\n      //   } else {\n      //     router.push(\"/login\");\n      //   }\n      // router.push(\"/\");\n    }\n  }, [user, data, donorInfo, organizationInfo, token]);\n  return __jsx(\"div\", null, props.childeren);\n}","map":null,"metadata":{},"sourceType":"module"}