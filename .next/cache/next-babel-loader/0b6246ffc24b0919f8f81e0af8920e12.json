{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useRef } from \"react\";\nimport useOnClickOutside from \"../../hooks/useOnClickOutside\";\nimport ComponentWrapper, { Input, SelectWrapper, CurrentOption, Dropdown } from \"./inputGroup.style\";\n\nconst InputGroup = ({\n  className,\n  inputType,\n  placeholder,\n  selectOptions,\n  inputValue,\n  inputOnChange,\n  selectOnUpdate,\n  selectedValue,\n  currency\n}) => {\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    open: false,\n    currency,\n    selectedValue\n  });\n\n  const handleDropdown = () => {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      open: !state.open\n    }));\n  };\n\n  const handleSelectedData = item => {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      open: false,\n      currency: item.title,\n      selectedValue: item.value\n    }));\n    selectOnUpdate(item.value);\n  };\n\n  const dropdownRef = useRef(null);\n  useOnClickOutside(dropdownRef, () => setState(_objectSpread(_objectSpread({}, state), {}, {\n    open: false\n  })));\n  const addAllClasses = [\"input_group\"];\n\n  if (className) {\n    addAllClasses.push(className);\n  }\n\n  return __jsx(ComponentWrapper, {\n    className: addAllClasses.join(\" \")\n  }, __jsx(Input, {\n    type: inputType,\n    value: inputValue,\n    placeholder: placeholder,\n    onChange: inputOnChange,\n    required: true,\n    \"aria-label\": \"input\"\n  }), __jsx(SelectWrapper, {\n    className: \"select_wrapper\"\n  }, __jsx(CurrentOption, {\n    className: \"current_option\",\n    onClick: handleDropdown\n  }, __jsx(\"span\", {\n    className: \"text\"\n  }, state.currency), __jsx(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"14.994\",\n    height: \"10.993\",\n    viewBox: \"0 0 14.994 10.993\"\n  }, __jsx(\"path\", {\n    d: \"M1452.115,6490.792l-7.028-10.076a.449.449,0,0,1-.083-.26.441.441,0,0,1,.055-.212.467.467,0,0,1,.414-.244h14.056a.467.467,0,0,1,.414.244.445.445,0,0,1-.028.472l-7.028,10.077a.473.473,0,0,1-.773,0Zm0,0\",\n    transform: \"translate(-1445.005 -6480)\",\n    fill: \"#bac2c9\"\n  }))), __jsx(Dropdown, {\n    className: `dropdown ${state.open ? \"active\" : \"hide\"}`,\n    ref: dropdownRef\n  }, selectOptions.map(item => __jsx(\"li\", {\n    className: state.selectedValue === item.value.toLowerCase() ? \"selected\" : \"\",\n    key: `option_key${item.id}`,\n    data: item.value.toLowerCase(),\n    onClick: () => handleSelectedData(item)\n  }, item.title)))));\n};\n\nInputGroup.defaultProps = {\n  inputType: \"number\",\n  selectOptions: [],\n  inputOnChange: () => {},\n  selectOnUpdate: () => {}\n};\nexport default InputGroup;","map":null,"metadata":{},"sourceType":"module"}