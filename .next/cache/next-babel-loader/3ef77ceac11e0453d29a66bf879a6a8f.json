{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { Fragment, useEffect } from \"react\";\nimport Link from \"next/link\";\nimport { useState } from \"react\";\nimport Text from \"../common/src/components/Text\";\nimport Image from \"../common/src/components/Image\";\nimport Head from \"next/head\";\nimport Sticky from \"react-stickynode\";\nimport { ThemeProvider } from \"styled-components\";\nimport { charityTheme } from \"../common/src/theme/charity\";\nimport { ResetCSS } from \"../common/src/assets/css/style\";\nimport { DrawerProvider } from \"../common/src/contexts/DrawerContext\";\nimport Navbar from \"../containers/Charity/Navbar\";\nimport DrawerSection from \"../containers/Charity/DrawerSection\";\nimport Footer from \"../containers/Charity/Footer\";\nimport { GlobalStyle, CharityWrapper, ContentWrapper } from \"../containers/Charity/charity.style\";\nimport { Box, Container, Typography, Grid, Paper, Divider } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Button from \"../common/src/components/Button\";\nimport Heading from \"../common/src/components/Heading\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport BusinessCenterIcon from \"@material-ui/icons/BusinessCenter\";\nimport AssessmentIcon from \"@material-ui/icons/Assessment\";\nimport PowerSettingsNewIcon from \"@material-ui/icons/PowerSettingsNew\";\nimport TextField from \"@material-ui/core/TextField\";\nimport PasswordField from \"material-ui-password-field\";\nimport { DropzoneArea } from \"material-ui-dropzone\";\nimport axios from \"axios\";\nimport cookie from \"js-cookie\";\nimport { useRouter } from \"next/router\";\nimport { useData, useDispatchUser } from \"../lib/userData\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport { UPDATE_ORGANIZATION } from \"../lib/mutations\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper\n  }\n}));\n\nfunction ListItemLink(props) {\n  return __jsx(ListItem, _extends({\n    button: true,\n    component: \"a\"\n  }, props));\n}\n\nexport default (() => {\n  const classes = useStyles();\n  const dispatch = useDispatchUser();\n  const organization = useData(); //returns context\n\n  const {\n    0: filedIds,\n    1: setFileIDs\n  } = useState([]);\n  const {\n    0: logo,\n    1: setLogo\n  } = useState(null);\n  const {\n    0: cover,\n    1: setCover\n  } = useState(null);\n  const {\n    0: regFile,\n    1: setRegFile\n  } = useState(null);\n  const {\n    0: taxFile,\n    1: setTaxFile\n  } = useState(null);\n  const {\n    0: formValues,\n    1: setFormValues\n  } = useState(\"\");\n  const {\n    0: updateLoading,\n    1: setUpdateLoading\n  } = useState(false);\n  const {\n    0: updateError,\n    1: setUpdateError\n  } = useState(\"\");\n  const {\n    0: fileLoading,\n    1: setFileLoading\n  } = useState(false);\n  const {\n    0: fileError,\n    1: setFileError\n  } = useState(\"\");\n  const [updateOrganization] = useMutation(UPDATE_ORGANIZATION, {\n    onCompleted: data => {\n      console.log(data);\n      dispatch({\n        type: \"UPDATE\",\n        payload: data.updateOrganization.organization\n      });\n      setUpdateError(\"Changes saved succesfully!\");\n      setUpdateLoading(false);\n    },\n    onError: error => {\n      console.log(error);\n      setUpdateError(\"Sorry an error occurred. Please try again!\");\n    }\n  });\n  const [updateFiles] = useMutation(UPDATE_ORGANIZATION, {\n    onCompleted: data => {\n      console.log(data);\n      dispatch({\n        type: \"UPDATE\",\n        payload: data.updateOrganization.organization\n      });\n      setFileError(\"File Uploaded Succesfully!\");\n      setFileLoading(false);\n    },\n    onError: error => {\n      console.log(error);\n      setFileError(\"Sorry an error occurred. Please try again!\");\n    }\n  });\n  const schemas = [{\n    email: Yup.string().email(\"Email not valid\").required(\"Please Enter Your Email\"),\n    focalPerson: Yup.string().required(\"Please Enter Full Name\"),\n    mobileNumber: Yup.string().required(\"Please Enter Your Mobile Number\"),\n    organizationName: Yup.string().required(\"Please Enter Organization Name\"),\n    address: Yup.string().required(\"Please Enter Organization Address\"),\n    registrationNumber: Yup.string(),\n    overview: Yup.string().required(\"Please Enter Your Organization Overiew\"),\n    mission: Yup.string().required(\"Please Enter Your Organization Mission\")\n  }];\n  const {\n    handleBlur,\n    handleChange,\n    handleSubmit,\n    handleReset,\n    values,\n    touched,\n    errors,\n    setFieldValue\n  } = useFormik({\n    initialValues: {\n      focalPerson: \"\",\n      mobileNumber: \"\",\n      organizationName: \"\",\n      address: \"\",\n      registrationNumber: \"\",\n      overview: \"\",\n      mission: \"\"\n    },\n    onSubmit: values => {\n      console.log(values);\n      setUpdateLoading(true);\n      setUpdateError(null);\n      setFormValues(values);\n      updateOrganization({\n        variables: {\n          fields: {\n            data: {\n              focalPerson: values.focalPerson,\n              mobileNumber: values.mobileNumber,\n              address: values.address,\n              organizationName: values.organizationName,\n              registrationNumber: values.registrationNumber,\n              overview: values.overview,\n              mission: values.mission\n            },\n            where: {\n              id: organization.id\n            }\n          }\n        }\n      });\n    },\n    validationSchema: Yup.object().shape(schemas[0])\n  });\n  useEffect(() => {\n    console.log(organization, \"organization\");\n\n    if (organization[\"id\"]) {\n      setFieldValue(\"organizationName\", organization.organizationName);\n      setFieldValue(\"registrationNumber\", organization.registrationNumber);\n      setFieldValue(\"focalPerson\", organization.focalPerson);\n      setFieldValue(\"email\", organization.user.email);\n      setFieldValue(\"address\", organization.address);\n      setFieldValue(\"mobileNumber\", organization.mobileNumber);\n      setFieldValue(\"overview\", organization.overview ? organization.overview : \"\");\n      setFieldValue(\"mission\", organization.mission ? organization.mission : \"\");\n    }\n  }, [organization]);\n\n  const handlefiles = async (files, type) => {\n    console.log(files, type);\n\n    if (files.length) {\n      setFileLoading(true);\n      const form = new FormData();\n      files.forEach(file => {\n        form.append(\"files\", file);\n      });\n\n      try {\n        await axios.post(\"http://localhost:1337/upload\", form, {\n          headers: {\n            \"Content-type\": \"multipart/form-data\"\n          }\n        }).then(res => {\n          console.log(res.data); //setFileIDs([...filedIds, ...res.data]);\n\n          if (type == \"logo\") {\n            //setLogo(res.data[0]);\n            updateFiles({\n              variables: {\n                fields: {\n                  data: {\n                    profilePicture: res.data[0].id\n                  },\n                  where: {\n                    id: organization.id\n                  }\n                }\n              }\n            });\n          }\n\n          if (type == \"cover\") {\n            // setTaxFile(res.data[0]);\n            updateFiles({\n              variables: {\n                fields: {\n                  data: {\n                    profilePicture: res.data[0].id\n                  },\n                  where: {\n                    id: organization.id\n                  }\n                }\n              }\n            });\n          }\n\n          if (type == \"regFile\") {\n            // setTaxFile(res.data[0]);\n            updateFiles({\n              variables: {\n                fields: {\n                  data: {\n                    registrationCertificate: res.data[0].id\n                  },\n                  where: {\n                    id: organization.id\n                  }\n                }\n              }\n            });\n          }\n\n          if (type == \"taxFile\") {\n            // setTaxFile(res.data[0]);\n            updateFiles({\n              variables: {\n                fields: {\n                  data: {\n                    taxExemptionForm: res.data[0].id\n                  },\n                  where: {\n                    id: organization.id\n                  }\n                }\n              }\n            });\n          }\n\n          setUpdateLoading(false);\n        });\n      } catch (error) {\n        console.log(error, \"error\");\n        setFileError(\"Sorry an error occurred. Please try again!\");\n      }\n    }\n  };\n\n  const handleLogout = () => {\n    console.log(\"logout called\");\n    cookie.remove(\"token\");\n    dispatch({\n      type: \"LOGOUT\",\n      payload: {}\n    });\n    window.location = \"/\";\n  };\n\n  return __jsx(ThemeProvider, {\n    theme: charityTheme\n  }, __jsx(Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"My Account | Esaar\"), __jsx(\"meta\", {\n    name: \"Description\",\n    content: \"React next landing page\"\n  }), __jsx(\"meta\", {\n    name: \"theme-color\",\n    content: \"#FCF22B\"\n  }), __jsx(\"meta\", {\n    name: \"viewport\",\n    content: \"width=device-width, initial-scale=1.0\"\n  }), __jsx(\"link\", {\n    href: \"https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700,800&display=swap\",\n    rel: \"stylesheet\"\n  })), __jsx(ResetCSS, null), __jsx(GlobalStyle, null), __jsx(CharityWrapper, null, __jsx(Sticky, {\n    top: 0,\n    innerZ: 9999,\n    activeClass: \"sticky-nav-active\"\n  }, __jsx(Navbar, null)), __jsx(DrawerProvider, null, __jsx(DrawerSection, null)), __jsx(ContentWrapper, null, __jsx(Grid, {\n    container: true,\n    style: {\n      maxWidth: \"1170px\",\n      minHeight: \"100vh\",\n      paddingTop: \"140px\",\n      marginLeft: \"170px\"\n    }\n  }, __jsx(Grid, {\n    item: true,\n    md: 3\n  }, __jsx(Paper, {\n    style: {\n      height: \"90vh\"\n    }\n  }, __jsx(Container, {\n    style: {\n      padding: \"40px\"\n    }\n  }, __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(List, {\n    component: \"nav\",\n    \"aria-label\": \"main mailbox folders\"\n  }, __jsx(Link, {\n    href: \"/account_o\"\n  }, __jsx(ListItem, {\n    button: true\n  }, __jsx(ListItemIcon, null, __jsx(AccountCircleIcon, null)), __jsx(ListItemText, {\n    primary: \"Account\"\n  }))), __jsx(Divider, null), __jsx(Link, {\n    href: \"/addProject\"\n  }, __jsx(ListItem, {\n    button: true\n  }, __jsx(ListItemIcon, null, __jsx(BusinessCenterIcon, null)), __jsx(ListItemText, {\n    primary: \"Add Project \"\n  }))), __jsx(Divider, null), __jsx(Link, {\n    href: \"/pastProject\"\n  }, __jsx(ListItem, {\n    button: true\n  }, __jsx(ListItemIcon, null, __jsx(AssessmentIcon, null)), __jsx(ListItemText, {\n    primary: \"Projects\"\n  }))), __jsx(Divider, null), __jsx(ListItem, {\n    button: true,\n    onClick: handleLogout\n  }, __jsx(ListItemIcon, null, __jsx(PowerSettingsNewIcon, null)), __jsx(ListItemText, {\n    primary: \"Logout\"\n  }))))))), __jsx(Grid, {\n    item: true,\n    md: 8,\n    style: {\n      marginLeft: \"30px\"\n    }\n  }, __jsx(Paper, {\n    style: {\n      height: \"100%\"\n    }\n  }, __jsx(Container, {\n    style: {\n      padding: \"40px\"\n    }\n  }, \" \", __jsx(Heading, {\n    content: \"Profile\",\n    color: \"#05B890\"\n  }), \" \", __jsx(Divider, null), __jsx(Grid, {\n    container: true\n  }, __jsx(Grid, {\n    item: true,\n    md: 5,\n    style: {\n      marginTop: \"30px\"\n    }\n  }, __jsx(Heading, {\n    content: \"Organization Name\",\n    as: \"h4\",\n    style: {\n      marginTop: \"1rem\"\n    }\n  }), \" \", __jsx(TextField, {\n    name: \"organizationName\",\n    value: values.organizationName,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    error: errors.organizationName && touched.organizationName,\n    helperText: errors.organizationName && touched.organizationName ? errors.organizationName : null,\n    id: \"outlined-basic\",\n    label: \"\",\n    variant: \"outlined\",\n    size: \"small\",\n    style: {\n      color: \"#3E2672\"\n    },\n    fullWidth: true\n  }), __jsx(Heading, {\n    content: \"Focal Person\",\n    as: \"h4\",\n    style: {\n      marginTop: \"1rem\"\n    }\n  }), \" \", __jsx(TextField, {\n    name: \"focalPerson\",\n    value: values.focalPerson,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    error: errors.focalPerson && touched.focalPerson,\n    helperText: errors.focalPerson && touched.focalPerson ? errors.focalPerson : null,\n    id: \"outlined-basic\",\n    label: \"\",\n    variant: \"outlined\",\n    size: \"small\",\n    fullWidth: true\n  }), __jsx(Heading, {\n    content: \"Email ID\",\n    as: \"h4\",\n    style: {\n      marginTop: \"1rem\"\n    }\n  }), \" \", __jsx(TextField, {\n    type: \"email\",\n    name: \"email\",\n    inputProps: {\n      readOnly: true\n    },\n    value: values.email,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    error: errors.email && touched.email,\n    helperText: errors.email && touched.email ? errors.email : null,\n    label: \"\",\n    variant: \"outlined\",\n    size: \"small\",\n    style: {\n      color: \"#05B890\"\n    },\n    fullWidth: true\n  }), __jsx(Heading, {\n    content: \"Logo\",\n    as: \"h4\",\n    style: {\n      marginTop: \"1rem\"\n    }\n  }), __jsx(DropzoneArea, {\n    acceptedFiles: [\"image/*\"],\n    dropzoneText: \"Drag and drop images here or click\",\n    onChange: files => handlefiles(files, \"logo\")\n  })), __jsx(Grid, {\n    item: true,\n    md: 1\n  }), __jsx(Grid, {\n    item: true,\n    md: 5,\n    style: {\n      marginTop: \"30px\"\n    }\n  }, __jsx(Heading, {\n    content: \"Registration Number\",\n    as: \"h4\",\n    style: {\n      marginTop: \"1rem\"\n    }\n  }), \" \", __jsx(TextField, {\n    name: \"registrationNumber\",\n    value: values.registrationNumber,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    error: errors.registrationNumber && touched.registrationNumber,\n    helperText: errors.registrationNumber && touched.registrationNumber ? errors.registrationNumber : null,\n    id: \"outlined-basic\",\n    label: \"\",\n    variant: \"outlined\",\n    size: \"small\",\n    style: {\n      color: \"#3E2672\"\n    },\n    fullWidth: true\n  }), __jsx(Heading, {\n    content: \"Contact Number\",\n    as: \"h4\",\n    style: {\n      marginTop: \"1rem\"\n    }\n  }), \" \", __jsx(TextField, {\n    name: \"mobileNumber\",\n    value: values.mobileNumber,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    error: errors.mobileNumber && touched.mobileNumber,\n    helperText: errors.mobileNumber && touched.mobileNumber ? errors.mobileNumber : null,\n    id: \"outlined-basic\",\n    label: \"\",\n    variant: \"outlined\",\n    size: \"small\",\n    fullWidth: true\n  }), __jsx(Heading, {\n    content: \"Address\",\n    as: \"h4\",\n    style: {\n      marginTop: \"1rem\"\n    }\n  }), \" \", __jsx(TextField, {\n    name: \"address\",\n    value: values.address,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    error: errors.address && touched.address,\n    helperText: errors.address && touched.address ? errors.address : null,\n    id: \"outlined-basic\",\n    label: \"\",\n    variant: \"outlined\",\n    multiline: true,\n    rows: 1,\n    size: \"small\",\n    style: {\n      color: \"#05B890\"\n    },\n    fullWidth: true\n  }), __jsx(Heading, {\n    content: \"Cover\",\n    as: \"h4\",\n    style: {\n      marginTop: \"1rem\"\n    }\n  }), __jsx(DropzoneArea, {\n    acceptedFiles: [\"image/*\"],\n    dropzoneText: \"Drag and drop images here or click\",\n    onChange: files => handlefiles(files, \"cover\")\n  })), __jsx(Grid, {\n    container: true,\n    item: true,\n    md: 12,\n    style: {\n      alignContent: \"center\"\n    }\n  }, __jsx(Heading, {\n    content: \"Organization Mission:\",\n    as: \"h4\",\n    style: {\n      marginTop: \"1rem\"\n    }\n  }), __jsx(TextField, {\n    name: \"mission\",\n    value: values.mission,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    error: errors.mission && touched.mission,\n    helperText: errors.mission && touched.mission ? errors.mission : null,\n    label: \"\",\n    variant: \"outlined\",\n    multiline: true,\n    rows: 8,\n    size: \"small\",\n    style: {\n      color: \"#05B890\"\n    },\n    fullWidth: true\n  }), __jsx(Heading, {\n    content: \"Organization Overview\",\n    as: \"h4\",\n    style: {\n      marginTop: \"1rem\"\n    }\n  }), __jsx(TextField, {\n    name: \"overview\",\n    value: values.overview,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    error: errors.overview && touched.overview,\n    helperText: errors.overview && touched.overview ? errors.overview : null,\n    label: \"\",\n    variant: \"outlined\",\n    multiline: true,\n    rows: 8,\n    size: \"small\",\n    style: {\n      color: \"#05B890\"\n    },\n    fullWidth: true\n  })), __jsx(Grid, {\n    container: true,\n    item: true,\n    md: 12,\n    style: {\n      alignContent: \"center\"\n    }\n  }, updateError ? __jsx(Text, {\n    content: updateError\n  }) : null)), __jsx(Grid, {\n    item: true,\n    md: 12,\n    style: {\n      marginTop: \"30px\"\n    }\n  }, __jsx(Heading, {\n    content: \"Documents\",\n    color: \"#05B890\"\n  }), __jsx(Divider, null), __jsx(Heading, {\n    content: \"Registration Certificate\",\n    as: \"h4\",\n    style: {\n      marginTop: \"1rem\"\n    }\n  }), __jsx(DropzoneArea, {\n    acceptedFiles: [\"image/*\"],\n    dropzoneText: \"Drag and drop images here or click\",\n    onChange: files => handlefiles(files, \"regFile\")\n  }), __jsx(Heading, {\n    content: \"Tax Exemption Form\",\n    as: \"h4\",\n    style: {\n      marginTop: \"1rem\"\n    }\n  }), __jsx(DropzoneArea, {\n    acceptedFiles: [\"image/*\"],\n    dropzoneText: \"Drag and drop images here or click\",\n    onChange: files => handlefiles(files, \"taxFile\")\n  }), __jsx(Grid, {\n    container: true,\n    item: true,\n    md: 12,\n    style: {\n      alignContent: \"center\"\n    }\n  }, fileError ? __jsx(Text, {\n    content: fileError\n  }) : null), __jsx(Grid, {\n    container: true,\n    item: true,\n    md: 12,\n    style: {\n      alignContent: \"center\"\n    }\n  }, __jsx(Button, {\n    title: \"Update Changes\",\n    variant: \"extendedFab\",\n    onClick: handleSubmit,\n    disabled: updateLoading,\n    isLoading: updateLoading,\n    style: {\n      marginTop: \"20px\",\n      marginLeft: \"230px\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      minWidth: \"200px\",\n      height: \"auto\"\n    }\n  })))))))), __jsx(Footer, null))));\n});","map":null,"metadata":{},"sourceType":"module"}