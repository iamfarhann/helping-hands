{"ast":null,"code":"var _s2 = $RefreshSig$();\n\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/mahad/Local Disk/untitled folder/helping-hands/common/src/contexts/DrawerContext.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport React, { useReducer } from 'react';\nvar initialState = {\n  isOpen: false\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'TOGGLE':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isOpen: !state.isOpen\n      });\n\n    default:\n      return state;\n  }\n}\n\nexport var DrawerContext = React.createContext({});\nexport var DrawerProvider = function DrawerProvider(_ref) {\n  _s2();\n\n  _s();\n\n  var children = _ref.children;\n\n  var _useReducer = useReducer(reducer, initialState),\n      state = _useReducer[0],\n      dispatch = _useReducer[1];\n\n  return __jsx(DrawerContext.Provider, {\n    value: {\n      state: state,\n      dispatch: dispatch\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, children);\n};\n\n_s2(DrawerProvider, \"lmboLNBiJ3YDjNpiQjwAo7gnrRQ=\");\n\n_c2 = DrawerProvider;\n\n_s(DrawerProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = DrawerProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"DrawerProvider\");\n\nvar _c2;\n\n$RefreshReg$(_c2, \"DrawerProvider\");","map":{"version":3,"sources":["/Users/mahad/Local Disk/untitled folder/helping-hands/common/src/contexts/DrawerContext.js"],"names":["initialState","isOpen","action","state","DrawerContext","React","DrawerProvider","children","dispatch","useReducer"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,IAAA,UAAA,QAAA,OAAA;AAEA,IAAMA,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE;AADW,CAArB;;AAIA,SAAA,OAAA,CAAA,KAAA,EAAA,MAAA,EAAgC;AAC9B,UAAQC,MAAM,CAAd,IAAA;AACE,SAAA,QAAA;AACE,aAAA,aAAA,CAAA,aAAA,CAAA,EAAA,EAAA,KAAA,CAAA,EAAA,EAAA,EAAA;AAEED,QAAAA,MAAM,EAAE,CAACE,KAAK,CAACF;AAFjB,OAAA,CAAA;;AAIF;AACE,aAAA,KAAA;AAPJ;AASD;;AACD,OAAO,IAAMG,aAAa,GAAGC,KAAK,CAALA,aAAAA,CAAtB,EAAsBA,CAAtB;AAEP,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAA,IAAA,EAAkB;AAAA;;AAAA,EAAA,EAAA;;AAAA,MAAfC,QAAe,GAAA,IAAA,CAAfA,QAAe;;AAAA,MAAA,WAAA,GACpBE,UAAU,CAAA,OAAA,EADU,YACV,CADU;AAAA,MACvCN,KADuC,GAAA,WAAA,CAAA,CAAA,CAAA;AAAA,MAChCK,QADgC,GAAA,WAAA,CAAA,CAAA,CAAA;;AAE9C,SACE,KAAA,CAAC,aAAD,CAAA,QAAA,EAAA;AAAwB,IAAA,KAAK,EAAE;AAAEL,MAAAA,KAAK,EAAP,KAAA;AAASK,MAAAA,QAAQ,EAARA;AAAT,KAA/B;AAAA,IAAA,MAAA,EAAA,KAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,EADF,QACE,CADF;AAFK,CAAA;;IAAMF,c;;MAAAA,c;;GAAAA,c;;KAAAA,c","sourcesContent":["import React, { useReducer } from 'react';\n\nconst initialState = {\n  isOpen: false,\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'TOGGLE':\n      return {\n        ...state,\n        isOpen: !state.isOpen,\n      };\n    default:\n      return state;\n  }\n}\nexport const DrawerContext = React.createContext({});\n\nexport const DrawerProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return (\n    <DrawerContext.Provider value={{ state, dispatch }}>\n      {children}\n    </DrawerContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}