{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { Fragment, useEffect } from \"react\";\nimport { useState } from \"react\";\nimport Head from \"next/head\";\nimport Link from \"next/link\";\nimport Text from \"../common/src/components/Text\";\nimport Sticky from \"react-stickynode\";\nimport { ThemeProvider } from \"styled-components\";\nimport { charityTheme } from \"../common/src/theme/charity\";\nimport { ResetCSS } from \"../common/src/assets/css/style\";\nimport { DrawerProvider } from \"../common/src/contexts/DrawerContext\";\nimport Navbar from \"../containers/Charity/Navbar\";\nimport DrawerSection from \"../containers/Charity/DrawerSection\";\nimport Footer from \"../containers/Charity/Footer\";\nimport { GlobalStyle, CharityWrapper, ContentWrapper } from \"../containers/Charity/charity.style\";\nimport { Box, Container, Typography, Grid, Paper, Divider, Checkbox } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport CommentIcon from \"@material-ui/icons/Comment\";\nimport InboxIcon from \"@material-ui/icons/Inbox\";\nimport DraftsIcon from \"@material-ui/icons/Drafts\";\nimport Button from \"../common/src/components/Button\";\nimport Heading from \"../common/src/components/Heading\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport BusinessCenterIcon from \"@material-ui/icons/BusinessCenter\";\nimport AssessmentIcon from \"@material-ui/icons/Assessment\";\nimport PowerSettingsNewIcon from \"@material-ui/icons/PowerSettingsNew\";\nimport TextField from \"@material-ui/core/TextField\";\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\nimport PasswordField from \"material-ui-password-field\";\nimport InputGroup from \"../common/src/components/InputGroup\";\nimport RadioGroup from \"../common/src/components/RadioGroup\";\nimport SectionWrapper, { ContentArea, ButtonGroup, DonationForm, DonateButton } from \"../containers/Charity/donateSection/donateSection.style\";\nimport { addCredits, currencyOptions } from \"../common/src/data/Charity\";\nimport cookie from \"js-cookie\";\nimport { useRouter } from \"next/router\";\nimport { useData, useDispatchUser } from \"../lib/userData\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useQuery, useMutation, useLazyQuery } from \"@apollo/react-hooks\";\nimport { UPDATE_DONOR } from \"../lib/mutations\";\nimport { GET_PROJECTS, GET_TAG_NAMES } from \"../lib/queries\";\nimport { DropzoneArea } from \"material-ui-dropzone\";\nimport axios from \"axios\";\nimport TagSelection from \"../containers/Charity/Tags/tagSelection\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport ProjectCard from \"../containers/Charity/Project\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport _ from \"lodash\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper\n  }\n}));\nexport default (() => {\n  const classes = useStyles();\n  const {\n    0: selectedTag,\n    1: setSelectedTag\n  } = useState([]);\n  const {\n    0: fetched,\n    1: setFetch\n  } = useState(true);\n  const {\n    query\n  } = useRouter();\n  const {\n    data: allTags,\n    loading: tagLoading,\n    error: tagError,\n    refetch: tagRefetch\n  } = useQuery(GET_TAG_NAMES);\n\n  const handleToggle = value => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  const [getProjects, {\n    data,\n    loading,\n    error,\n    refetch\n  }] = useLazyQuery(GET_PROJECTS);\n  useEffect(() => {\n    console.log(data);\n\n    if (!data && fetched && !query[\"tag\"]) {\n      getProjects({\n        variables: {\n          where: {},\n          sort: \"createdAt:desc\",\n          limit: null,\n          start: 0\n        }\n      });\n      setFetch(false);\n    }\n\n    if (!data && fetched && query[\"tag\"]) {\n      getProjects({\n        variables: {\n          where: {\n            tags_in: [query.tag]\n          },\n          sort: \"createdAt:desc\",\n          limit: null,\n          start: 0\n        }\n      });\n      setFetch(false);\n    }\n  }, [data, query]);\n\n  const handleFilter = () => {\n    //console.log(\"Handle Filter:\", selectedTag,{});\n    if (selectedTag.length) {\n      console.log(\"if\");\n      getProjects({\n        variables: {\n          where: {\n            tags_in: selectedTag.map(tag => tag.id)\n          },\n          sort: \"createdAt:desc\",\n          limit: null,\n          start: 0\n        }\n      });\n    } else {\n      console.log(\"else\");\n      getProjects({\n        variables: {\n          where: {},\n          sort: \"createdAt:desc\",\n          limit: null,\n          start: 0\n        }\n      });\n    }\n  };\n\n  return __jsx(ThemeProvider, {\n    theme: charityTheme\n  }, __jsx(Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"Explore Projects | Esaar\"), __jsx(\"meta\", {\n    name: \"Description\",\n    content: \"React next landing page\"\n  }), __jsx(\"meta\", {\n    name: \"theme-color\",\n    content: \"#FCF22B\"\n  }), __jsx(\"meta\", {\n    name: \"viewport\",\n    content: \"width=device-width, initial-scale=1.0\"\n  }), __jsx(\"link\", {\n    href: \"https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700,800&display=swap\",\n    rel: \"stylesheet\"\n  })), __jsx(ResetCSS, null), __jsx(GlobalStyle, null), __jsx(CharityWrapper, null, __jsx(Sticky, {\n    top: 0,\n    innerZ: 9999,\n    activeClass: \"sticky-nav-active\"\n  }, __jsx(Navbar, null)), __jsx(DrawerProvider, null, __jsx(DrawerSection, null)), __jsx(ContentWrapper, null, __jsx(Container, {\n    maxWidth: \"lg\",\n    style: {\n      marginTop: \"140px\",\n      height: \"100%\",\n      paddingBottom: \"40px\"\n    }\n  }, __jsx(Grid, {\n    item: true,\n    style: {\n      marginBottom: \"20px\"\n    },\n    md: 12\n  }, __jsx(\"img\", {\n    src: \"/image/charity/recommended.jpg\",\n    style: {\n      objectFit: \"cover\",\n      width: \"100%\",\n      height: \"400px\"\n    }\n  })), __jsx(Grid, {\n    item: true,\n    style: {\n      marginBottom: \"20px\"\n    },\n    md: 12\n  }, __jsx(Heading, {\n    content: \"Explore Fundraisers\",\n    as: \"h1\",\n    color: \"secondary\"\n  })), __jsx(Grid, {\n    container: true,\n    alignItems: \"flex-start\",\n    spacing: 4\n  }, __jsx(Grid, {\n    item: true,\n    md: 3\n  }, __jsx(Paper, {\n    style: {\n      height: \"90vh\"\n    }\n  }, __jsx(Container, {\n    style: {\n      padding: \"20px\"\n    }\n  }, __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(Text, {\n    content: \"Explore projects by categories:\",\n    style: {\n      fontSize: \"20px\"\n    }\n  }), __jsx(Autocomplete, {\n    size: \"small\",\n    multiple: true,\n    id: \"tags-outlined\",\n    options: allTags ? allTags.tags.map(tag => {\n      return {\n        id: tag.id,\n        value: tag.id,\n        label: tag.name\n      };\n    }) : [],\n    getOptionLabel: option => option.label,\n    value: selectedTag,\n    onChange: (event, newValue) => {\n      setSelectedTag(_.uniqBy(newValue, \"id\"));\n    } //defaultValue={[top100Films[13]]}\n    ,\n    filterSelectedOptions: true,\n    renderInput: params => __jsx(TextField, _extends({}, params, {\n      variant: \"outlined\",\n      label: \"Select Categories\",\n      placeholder: \"Categories\"\n    }))\n  }), __jsx(Box, {\n    display: \"flex\",\n    py: 2,\n    justifyContent: \"center\"\n  }, __jsx(Button, {\n    title: \"Filter\",\n    onClick: handleFilter,\n    variant: \"extendedFab\",\n    fullWidth: true\n  })))))), data ? __jsx(Grid, {\n    container: true,\n    item: true,\n    md: 9,\n    spacing: 4\n  }, data.projects.map(project => {\n    return __jsx(Grid, {\n      item: true,\n      md: 4,\n      key: project.id\n    }, __jsx(Paper, null, __jsx(ProjectCard, {\n      project: project\n    })));\n  })) : __jsx(Grid, {\n    container: true,\n    item: true,\n    md: 8,\n    justify: \"center\",\n    alignItem: \"center\",\n    spacing: 4\n  }, __jsx(Grid, {\n    item: true,\n    md: 2\n  }, __jsx(CircularProgress, {\n    color: \"secondary\"\n  })))))), __jsx(Footer, null))));\n});","map":null,"metadata":{},"sourceType":"module"}