{"ast":null,"code":"var _jsxFileName = \"/Users/mahad/Local Disk/untitled folder/helping-hands/common/src/components/Navbar/index.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport NavbarStyle from './navbar.style';\n\nconst Navbar = _ref => {\n  let {\n    className,\n    children,\n    navbarStyle\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"className\", \"children\", \"navbarStyle\"]); // Add all classs to an array\n\n\n  const addAllClasses = ['reusecore__navbar']; // className prop checking\n\n  if (className) {\n    addAllClasses.push(className);\n  }\n\n  return __jsx(NavbarStyle, _extends({\n    className: addAllClasses.join(' ')\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }), children);\n};\n\nNavbar.propTypes = {\n  /** ClassName of the Navbar. Default class is reusecore__navbar*/\n  className: PropTypes.string,\n\n  /** Used to render menu, logo, button or any component that\n   * you want to show in navbar. */\n  children: PropTypes.element,\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number]))]),\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number]))]),\n  space: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number]))]),\n  borderRadius: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number]))]),\n  boxShadow: PropTypes.string,\n  color: PropTypes.string,\n  display: PropTypes.string,\n  alignItems: PropTypes.string,\n  justifyContent: PropTypes.string,\n  flexDirection: PropTypes.string,\n  flexWrap: PropTypes.string\n};\n/** Navbar default proptype */\n\nNavbar.defaultProps = {};\nexport default Navbar;","map":{"version":3,"sources":["/Users/mahad/Local Disk/untitled folder/helping-hands/common/src/components/Navbar/index.js"],"names":["Navbar","navbarStyle","props","addAllClasses","className","PropTypes","children","width","height","space","borderRadius","boxShadow","color","display","alignItems","justifyContent","flexDirection","flexWrap","string"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,SAAA,MAAA,YAAA;AACA,OAAA,WAAA,MAAA,gBAAA;;AAEA,MAAMA,MAAM,GAAG,IAAA,IAAoD;AAAA,MAAnD;AAAA,IAAA,SAAA;AAAA,IAAA,QAAA;AAAuBC,IAAAA;AAAvB,MAAmD,IAAA;AAAA,MAAZC,KAAY,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,WAAA,EAAA,UAAA,EAAA,aAAA,CAAA,CAAA,CAAA,CACjE;;;AACA,QAAMC,aAAa,GAAG,CAF2C,mBAE3C,CAAtB,CAFiE,CAIjE;;AACA,MAAA,SAAA,EAAe;AACbA,IAAAA,aAAa,CAAbA,IAAAA,CAAAA,SAAAA;AACD;;AAED,SACE,KAAA,CAAA,WAAA,EAAA,QAAA,CAAA;AAAa,IAAA,SAAS,EAAEA,aAAa,CAAbA,IAAAA,CAAAA,GAAAA;AAAxB,GAAA,EAAA,KAAA,EAAA;AAAA,IAAA,MAAA,EAAA,IAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,CAAA,EADF,QACE,CADF;AATF,CAAA;;AAgBAH,MAAM,CAANA,SAAAA,GAAmB;AACjB;AACAI,EAAAA,SAAS,EAAEC,SAAS,CAFH,MAAA;;AAIjB;;AAEAC,EAAAA,QAAQ,EAAED,SAAS,CANF,OAAA;AAQjBE,EAAAA,KAAK,EAAEF,SAAS,CAATA,SAAAA,CAAoB,CACzBA,SAAS,CADgB,MAAA,EAEzBA,SAAS,CAFgB,MAAA,EAGzBA,SAAS,CAATA,OAAAA,CACEA,SAAS,CAATA,SAAAA,CAAoB,CAACA,SAAS,CAAV,MAAA,EAAmBA,SAAS,CAZnC,MAYO,CAApBA,CADFA,CAHyB,CAApBA,CARU;AAgBjBG,EAAAA,MAAM,EAAEH,SAAS,CAATA,SAAAA,CAAoB,CAC1BA,SAAS,CADiB,MAAA,EAE1BA,SAAS,CAFiB,MAAA,EAG1BA,SAAS,CAATA,OAAAA,CACEA,SAAS,CAATA,SAAAA,CAAoB,CAACA,SAAS,CAAV,MAAA,EAAmBA,SAAS,CApBnC,MAoBO,CAApBA,CADFA,CAH0B,CAApBA,CAhBS;AAwBjBI,EAAAA,KAAK,EAAEJ,SAAS,CAATA,SAAAA,CAAoB,CACzBA,SAAS,CADgB,MAAA,EAEzBA,SAAS,CAFgB,MAAA,EAGzBA,SAAS,CAATA,OAAAA,CACEA,SAAS,CAATA,SAAAA,CAAoB,CAACA,SAAS,CAAV,MAAA,EAAmBA,SAAS,CA5BnC,MA4BO,CAApBA,CADFA,CAHyB,CAApBA,CAxBU;AAgCjBK,EAAAA,YAAY,EAAEL,SAAS,CAATA,SAAAA,CAAoB,CAChCA,SAAS,CADuB,MAAA,EAEhCA,SAAS,CAFuB,MAAA,EAGhCA,SAAS,CAATA,OAAAA,CACEA,SAAS,CAATA,SAAAA,CAAoB,CAACA,SAAS,CAAV,MAAA,EAAmBA,SAAS,CApCnC,MAoCO,CAApBA,CADFA,CAHgC,CAApBA,CAhCG;AAwCjBM,EAAAA,SAAS,EAAEN,SAAS,CAxCH,MAAA;AA0CjBO,EAAAA,KAAK,EAAEP,SAAS,CA1CC,MAAA;AA4CjBQ,EAAAA,OAAO,EAAER,SAAS,CA5CD,MAAA;AA8CjBS,EAAAA,UAAU,EAAET,SAAS,CA9CJ,MAAA;AAgDjBU,EAAAA,cAAc,EAAEV,SAAS,CAhDR,MAAA;AAkDjBW,EAAAA,aAAa,EAAEX,SAAS,CAlDP,MAAA;AAoDjBY,EAAAA,QAAQ,EAAEZ,SAAS,CAACa;AApDH,CAAnBlB;AAuDA;;AACAA,MAAM,CAANA,YAAAA,GAAAA,EAAAA;AAEA,eAAA,MAAA","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport NavbarStyle from './navbar.style';\n\nconst Navbar = ({ className, children, navbarStyle, ...props }) => {\n  // Add all classs to an array\n  const addAllClasses = ['reusecore__navbar'];\n\n  // className prop checking\n  if (className) {\n    addAllClasses.push(className);\n  }\n\n  return (\n    <NavbarStyle className={addAllClasses.join(' ')} {...props}>\n      {children}\n    </NavbarStyle>\n  );\n};\n\nNavbar.propTypes = {\n  /** ClassName of the Navbar. Default class is reusecore__navbar*/\n  className: PropTypes.string,\n\n  /** Used to render menu, logo, button or any component that\n   * you want to show in navbar. */\n  children: PropTypes.element,\n\n  width: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n  ]),\n\n  height: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n  ]),\n\n  space: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n  ]),\n\n  borderRadius: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n  ]),\n\n  boxShadow: PropTypes.string,\n\n  color: PropTypes.string,\n\n  display: PropTypes.string,\n\n  alignItems: PropTypes.string,\n\n  justifyContent: PropTypes.string,\n\n  flexDirection: PropTypes.string,\n\n  flexWrap: PropTypes.string,\n};\n\n/** Navbar default proptype */\nNavbar.defaultProps = {};\n\nexport default Navbar;\n"]},"metadata":{},"sourceType":"module"}