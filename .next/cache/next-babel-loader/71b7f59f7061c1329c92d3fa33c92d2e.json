{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/mahad/Local Disk/FYP-FE/helping-hands/common/src/components/InputGroup/index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport useOnClickOutside from \"../../hooks/useOnClickOutside\";\nimport ComponentWrapper, { Input, SelectWrapper, CurrentOption, Dropdown } from \"./inputGroup.style\";\n\nvar InputGroup = function InputGroup(_ref) {\n  _s();\n\n  var className = _ref.className,\n      inputType = _ref.inputType,\n      placeholder = _ref.placeholder,\n      selectOptions = _ref.selectOptions,\n      inputValue = _ref.inputValue,\n      inputOnChange = _ref.inputOnChange,\n      selectOnUpdate = _ref.selectOnUpdate,\n      selectedValue = _ref.selectedValue,\n      currency = _ref.currency;\n\n  var _useState = useState({\n    open: false,\n    currency: currency,\n    selectedValue: selectedValue\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var handleDropdown = function handleDropdown() {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      open: !state.open\n    }));\n  };\n\n  var handleSelectedData = function handleSelectedData(item) {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      open: false,\n      currency: item.title,\n      selectedValue: item.value\n    }));\n    selectOnUpdate(item.value);\n  };\n\n  var dropdownRef = useRef(null);\n  useOnClickOutside(dropdownRef, function () {\n    return setState(_objectSpread(_objectSpread({}, state), {}, {\n      open: false\n    }));\n  });\n  var addAllClasses = [\"input_group\"];\n\n  if (className) {\n    addAllClasses.push(className);\n  }\n\n  return __jsx(ComponentWrapper, {\n    className: addAllClasses.join(\" \"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, __jsx(Input, {\n    type: inputType,\n    value: inputValue,\n    placeholder: placeholder,\n    onChange: inputOnChange,\n    required: true,\n    \"aria-label\": \"input\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }), __jsx(SelectWrapper, {\n    className: \"select_wrapper\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, __jsx(CurrentOption, {\n    className: \"current_option\",\n    onClick: handleDropdown,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, __jsx(\"span\", {\n    className: \"text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, state.currency), __jsx(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"14.994\",\n    height: \"10.993\",\n    viewBox: \"0 0 14.994 10.993\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, __jsx(\"path\", {\n    d: \"M1452.115,6490.792l-7.028-10.076a.449.449,0,0,1-.083-.26.441.441,0,0,1,.055-.212.467.467,0,0,1,.414-.244h14.056a.467.467,0,0,1,.414.244.445.445,0,0,1-.028.472l-7.028,10.077a.473.473,0,0,1-.773,0Zm0,0\",\n    transform: \"translate(-1445.005 -6480)\",\n    fill: \"#bac2c9\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }))), __jsx(Dropdown, {\n    className: \"dropdown \".concat(state.open ? \"active\" : \"hide\"),\n    ref: dropdownRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, selectOptions.map(function (item) {\n    return __jsx(\"li\", {\n      className: state.selectedValue === item.value.toLowerCase() ? \"selected\" : \"\",\n      key: \"option_key\".concat(item.id),\n      data: item.value.toLowerCase(),\n      onClick: function onClick() {\n        return handleSelectedData(item);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, item.title);\n  }))));\n};\n\n_s(InputGroup, \"N+9jcicwmnl6o6Z9up8rIA1x5zs=\", false, function () {\n  return [useOnClickOutside];\n});\n\n_c = InputGroup;\nInputGroup.propTypes = {\n  /** className of the InputGroup. */\n  className: PropTypes.string,\n\n  /** inputType prop for input field type. This should be a number or text. */\n  inputType: PropTypes.oneOf([\"number\", \"text\"]),\n\n  /** placeholder text for input field type. */\n  placeholder: PropTypes.string,\n\n  /** Call back function for inout onChange event. */\n  inputOnChange: PropTypes.func,\n\n  /** currency prop shoude be a string with currency name and symbol. */\n  currency: PropTypes.string,\n\n  /** selectedValue pron shoube be a currency string without symbol but in lowercase. */\n  selectedValue: PropTypes.string,\n\n  /** selectOptions prop contain a set of data in array of object form. It has 3 properties id, value and title. */\n  selectOptions: PropTypes.array,\n\n  /** It contain selected data. */\n  selectOnUpdate: PropTypes.func\n};\nInputGroup.defaultProps = {\n  inputType: \"number\",\n  selectOptions: [],\n  inputOnChange: function inputOnChange() {},\n  selectOnUpdate: function selectOnUpdate() {}\n};\nexport default InputGroup;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputGroup\");","map":{"version":3,"sources":["/Users/mahad/Local Disk/FYP-FE/helping-hands/common/src/components/InputGroup/index.js"],"names":["React","useState","useRef","PropTypes","useOnClickOutside","ComponentWrapper","Input","SelectWrapper","CurrentOption","Dropdown","InputGroup","className","inputType","placeholder","selectOptions","inputValue","inputOnChange","selectOnUpdate","selectedValue","currency","open","state","setState","handleDropdown","handleSelectedData","item","title","value","dropdownRef","addAllClasses","push","join","map","toLowerCase","id","propTypes","string","oneOf","func","array","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport useOnClickOutside from \"../../hooks/useOnClickOutside\";\nimport ComponentWrapper, {\n  Input,\n  SelectWrapper,\n  CurrentOption,\n  Dropdown,\n} from \"./inputGroup.style\";\n\nconst InputGroup = ({\n  className,\n  inputType,\n  placeholder,\n  selectOptions,\n  inputValue,\n  inputOnChange,\n  selectOnUpdate,\n  selectedValue,\n  currency,\n}) => {\n  const [state, setState] = useState({\n    open: false,\n    currency,\n    selectedValue,\n  });\n\n  const handleDropdown = () => {\n    setState({\n      ...state,\n      open: !state.open,\n    });\n  };\n\n  const handleSelectedData = (item) => {\n    setState({\n      ...state,\n      open: false,\n      currency: item.title,\n      selectedValue: item.value,\n    });\n    selectOnUpdate(item.value);\n  };\n\n  const dropdownRef = useRef(null);\n  useOnClickOutside(dropdownRef, () => setState({ ...state, open: false }));\n\n  const addAllClasses = [\"input_group\"];\n  if (className) {\n    addAllClasses.push(className);\n  }\n\n  return (\n    <ComponentWrapper className={addAllClasses.join(\" \")}>\n      <Input\n        type={inputType}\n        value={inputValue}\n        placeholder={placeholder}\n        onChange={inputOnChange}\n        required={true}\n        aria-label=\"input\"\n      />\n      <SelectWrapper className=\"select_wrapper\">\n        <CurrentOption className=\"current_option\" onClick={handleDropdown}>\n          <span className=\"text\">{state.currency}</span>\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"14.994\"\n            height=\"10.993\"\n            viewBox=\"0 0 14.994 10.993\"\n          >\n            <path\n              d=\"M1452.115,6490.792l-7.028-10.076a.449.449,0,0,1-.083-.26.441.441,0,0,1,.055-.212.467.467,0,0,1,.414-.244h14.056a.467.467,0,0,1,.414.244.445.445,0,0,1-.028.472l-7.028,10.077a.473.473,0,0,1-.773,0Zm0,0\"\n              transform=\"translate(-1445.005 -6480)\"\n              fill=\"#bac2c9\"\n            />\n          </svg>\n        </CurrentOption>\n        <Dropdown\n          className={`dropdown ${state.open ? \"active\" : \"hide\"}`}\n          ref={dropdownRef}\n        >\n          {selectOptions.map((item) => (\n            <li\n              className={\n                state.selectedValue === item.value.toLowerCase()\n                  ? \"selected\"\n                  : \"\"\n              }\n              key={`option_key${item.id}`}\n              data={item.value.toLowerCase()}\n              onClick={() => handleSelectedData(item)}\n            >\n              {item.title}\n            </li>\n          ))}\n        </Dropdown>\n      </SelectWrapper>\n    </ComponentWrapper>\n  );\n};\n\nInputGroup.propTypes = {\n  /** className of the InputGroup. */\n  className: PropTypes.string,\n  /** inputType prop for input field type. This should be a number or text. */\n  inputType: PropTypes.oneOf([\"number\", \"text\"]),\n  /** placeholder text for input field type. */\n  placeholder: PropTypes.string,\n  /** Call back function for inout onChange event. */\n  inputOnChange: PropTypes.func,\n  /** currency prop shoude be a string with currency name and symbol. */\n  currency: PropTypes.string,\n  /** selectedValue pron shoube be a currency string without symbol but in lowercase. */\n  selectedValue: PropTypes.string,\n  /** selectOptions prop contain a set of data in array of object form. It has 3 properties id, value and title. */\n  selectOptions: PropTypes.array,\n  /** It contain selected data. */\n  selectOnUpdate: PropTypes.func,\n};\n\nInputGroup.defaultProps = {\n  inputType: \"number\",\n  selectOptions: [],\n  inputOnChange: () => {},\n  selectOnUpdate: () => {},\n};\n\nexport default InputGroup;\n"]},"metadata":{},"sourceType":"module"}