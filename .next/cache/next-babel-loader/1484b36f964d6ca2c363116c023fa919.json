{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/mahad/Local Disk/FYP-FE/helping-hands/common/src/components/GlideCarousel/index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Glide from '@glidejs/glide';\nimport '@glidejs/glide/dist/css/glide.core.min.css';\nimport GlideWrapper, { ButtonControlWrapper, ButtonWrapper, BulletControlWrapper, BulletButton, DefaultBtn } from './glide.style';\n\nvar GlideCarousel = function GlideCarousel(_ref) {\n  _s();\n\n  var className = _ref.className,\n      children = _ref.children,\n      options = _ref.options,\n      controls = _ref.controls,\n      prevButton = _ref.prevButton,\n      nextButton = _ref.nextButton,\n      prevWrapper = _ref.prevWrapper,\n      nextWrapper = _ref.nextWrapper,\n      bullets = _ref.bullets,\n      numberOfBullets = _ref.numberOfBullets,\n      buttonWrapperStyle = _ref.buttonWrapperStyle,\n      bulletWrapperStyle = _ref.bulletWrapperStyle,\n      bulletButtonStyle = _ref.bulletButtonStyle,\n      carouselSelector = _ref.carouselSelector;\n  // Add all classs to an array\n  var addAllClasses = ['glide']; // className prop checking\n\n  if (className) {\n    addAllClasses.push(className);\n  } // number of bullets loop\n\n\n  var totalBullets = [];\n\n  for (var i = 0; i < numberOfBullets; i++) {\n    totalBullets.push(i);\n  } // Load glide\n\n\n  useEffect(function () {\n    var glide = new Glide(carouselSelector ? \"#\".concat(carouselSelector) : '#glide', _objectSpread({}, options));\n    glide.mount();\n  });\n  return __jsx(GlideWrapper, {\n    className: addAllClasses.join(' '),\n    id: carouselSelector || 'glide',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"glide__track\",\n    \"data-glide-el\": \"track\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, __jsx(\"ul\", {\n    className: \"glide__slides\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, children)), controls && __jsx(ButtonControlWrapper, _extends({\n    className: \"glide__controls\",\n    \"data-glide-el\": \"controls\"\n  }, buttonWrapperStyle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }), __jsx(ButtonWrapper, _extends({}, prevWrapper, {\n    className: \"glide__prev--area\",\n    \"data-glide-dir\": \"<\",\n    \"aria-label\": \"prev\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }), prevButton ? prevButton : __jsx(DefaultBtn, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 40\n    }\n  }, \"Prev\")), __jsx(ButtonWrapper, _extends({}, nextWrapper, {\n    className: \"glide__next--area\",\n    \"data-glide-dir\": \">\",\n    \"aria-label\": \"next\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }), nextButton ? nextButton : __jsx(DefaultBtn, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 40\n    }\n  }, \"Next\"))), bullets && __jsx(BulletControlWrapper, _extends({\n    className: \"glide__bullets\",\n    \"data-glide-el\": \"controls[nav]\"\n  }, bulletWrapperStyle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }), __jsx(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, totalBullets.map(function (index) {\n    return __jsx(BulletButton, _extends({\n      key: index,\n      className: \"glide__bullet\",\n      \"data-glide-dir\": \"=\".concat(index),\n      \"aria-label\": \"bullet\".concat(index + 1)\n    }, bulletButtonStyle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 15\n      }\n    }));\n  }))));\n};\n\n_s(GlideCarousel, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = GlideCarousel;\nGlideCarousel.propTypes = {\n  /** className of the GlideCarousel. */\n  className: PropTypes.string,\n\n  /** Children. */\n  children: PropTypes.element,\n\n  /** You can add your custom glid options using this prop. */\n  options: PropTypes.object,\n\n  /** Hide || show controls nav. */\n  controls: PropTypes.bool,\n\n  /** Hide || show bullets nav. */\n  bullets: PropTypes.bool,\n\n  /** This prop only take your slider / carousel / testimonials data length. */\n  numberOfBullets: PropTypes.number,\n\n  /** bulletWrapperStyle is a bullet control wrapper style object prop.\n   * It's contain display, space, alignItems,\n   * justifyContent and flexWrap style-system prop.\n   */\n  bulletWrapperStyle: PropTypes.object,\n\n  /** buttonWrapperStyle is a button control wrapper style object prop.\n   * It's contain same as buttonWrapperStyle style-system prop and\n   * position, left, right, top and bottom.\n   */\n  buttonWrapperStyle: PropTypes.object,\n\n  /** prevWrapper is a previous button wrapper style object prop.\n   * It's contain display, space, bg, borders, boxShadow, borderRadius,\n   * position, top, left, right and bottom style-system prop.\n   */\n  prevWrapper: PropTypes.object,\n\n  /** nextWrapper is a next button wrapper style object prop.\n   * It's contain same as prevWrapper style-system prop.\n   */\n  nextWrapper: PropTypes.object,\n\n  /** Set previous button for glide carousel. */\n  prevButton: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n\n  /** Set next button for glide carousel. */\n  nextButton: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n\n  /** bulletButtonStyle is a bullet button style object prop.\n   * It's contain  display, width, height, space,\n   * bg, borders, boxShadow and borderRadius style-system prop.\n   */\n  bulletButtonStyle: PropTypes.object\n}; // GlideCarousel default props\n\nGlideCarousel.defaultProps = {\n  controls: true,\n  bullets: false\n};\nexport default GlideCarousel;\n\nvar _c;\n\n$RefreshReg$(_c, \"GlideCarousel\");","map":{"version":3,"sources":["/Users/mahad/Local Disk/FYP-FE/helping-hands/common/src/components/GlideCarousel/index.js"],"names":["React","Fragment","useEffect","PropTypes","Glide","GlideWrapper","ButtonControlWrapper","ButtonWrapper","BulletControlWrapper","BulletButton","DefaultBtn","GlideCarousel","className","children","options","controls","prevButton","nextButton","prevWrapper","nextWrapper","bullets","numberOfBullets","buttonWrapperStyle","bulletWrapperStyle","bulletButtonStyle","carouselSelector","addAllClasses","push","totalBullets","i","glide","mount","join","map","index","propTypes","string","element","object","bool","number","oneOfType","defaultProps"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAO,4CAAP;AACA,OAAOC,YAAP,IACEC,oBADF,EAEEC,aAFF,EAGEC,oBAHF,EAIEC,YAJF,EAKEC,UALF,QAMO,eANP;;AAQA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAehB;AAAA;;AAAA,MAdJC,SAcI,QAdJA,SAcI;AAAA,MAbJC,QAaI,QAbJA,QAaI;AAAA,MAZJC,OAYI,QAZJA,OAYI;AAAA,MAXJC,QAWI,QAXJA,QAWI;AAAA,MAVJC,UAUI,QAVJA,UAUI;AAAA,MATJC,UASI,QATJA,UASI;AAAA,MARJC,WAQI,QARJA,WAQI;AAAA,MAPJC,WAOI,QAPJA,WAOI;AAAA,MANJC,OAMI,QANJA,OAMI;AAAA,MALJC,eAKI,QALJA,eAKI;AAAA,MAJJC,kBAII,QAJJA,kBAII;AAAA,MAHJC,kBAGI,QAHJA,kBAGI;AAAA,MAFJC,iBAEI,QAFJA,iBAEI;AAAA,MADJC,gBACI,QADJA,gBACI;AACJ;AACA,MAAMC,aAAa,GAAG,CAAC,OAAD,CAAtB,CAFI,CAIJ;;AACA,MAAId,SAAJ,EAAe;AACbc,IAAAA,aAAa,CAACC,IAAd,CAAmBf,SAAnB;AACD,GAPG,CASJ;;;AACA,MAAMgB,YAAY,GAAG,EAArB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,eAApB,EAAqCQ,CAAC,EAAtC,EAA0C;AACxCD,IAAAA,YAAY,CAACD,IAAb,CAAkBE,CAAlB;AACD,GAbG,CAeJ;;;AACA3B,EAAAA,SAAS,CAAC,YAAM;AACd,QAAM4B,KAAK,GAAG,IAAI1B,KAAJ,CACZqB,gBAAgB,cAAOA,gBAAP,IAA4B,QADhC,oBAGPX,OAHO,EAAd;AAMAgB,IAAAA,KAAK,CAACC,KAAN;AACD,GARQ,CAAT;AAUA,SACE,MAAC,YAAD;AACE,IAAA,SAAS,EAAEL,aAAa,CAACM,IAAd,CAAmB,GAAnB,CADb;AAEE,IAAA,EAAE,EAAEP,gBAAgB,IAAI,OAF1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE;AAAK,IAAA,SAAS,EAAC,cAAf;AAA8B,qBAAc,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BZ,QAA/B,CADF,CAJF,EASGE,QAAQ,IACP,MAAC,oBAAD;AACE,IAAA,SAAS,EAAC,iBADZ;AAEE,qBAAc;AAFhB,KAGMO,kBAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAKE,MAAC,aAAD,eACMJ,WADN;AAEE,IAAA,SAAS,EAAC,mBAFZ;AAGE,sBAAe,GAHjB;AAIE,kBAAW,MAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMGF,UAAU,GAAGA,UAAH,GAAgB,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAN7B,CALF,EAaE,MAAC,aAAD,eACMG,WADN;AAEE,IAAA,SAAS,EAAC,mBAFZ;AAGE,sBAAe,GAHjB;AAIE,kBAAW,MAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMGF,UAAU,GAAGA,UAAH,GAAgB,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAN7B,CAbF,CAVJ,EAmCGG,OAAO,IACN,MAAC,oBAAD;AACE,IAAA,SAAS,EAAC,gBADZ;AAEE,qBAAc;AAFhB,KAGMG,kBAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAKE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGK,YAAY,CAACK,GAAb,CAAiB,UAAAC,KAAK;AAAA,WACrB,MAAC,YAAD;AACE,MAAA,GAAG,EAAEA,KADP;AAEE,MAAA,SAAS,EAAC,eAFZ;AAGE,mCAAoBA,KAApB,CAHF;AAIE,oCAAqBA,KAAK,GAAG,CAA7B;AAJF,OAKMV,iBALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADqB;AAAA,GAAtB,CADH,CALF,CApCJ,CADF;AAyDD,CAlGD;;GAAMb,a;;KAAAA,a;AAoGNA,aAAa,CAACwB,SAAd,GAA0B;AACxB;AACAvB,EAAAA,SAAS,EAAET,SAAS,CAACiC,MAFG;;AAIxB;AACAvB,EAAAA,QAAQ,EAAEV,SAAS,CAACkC,OALI;;AAOxB;AACAvB,EAAAA,OAAO,EAAEX,SAAS,CAACmC,MARK;;AAUxB;AACAvB,EAAAA,QAAQ,EAAEZ,SAAS,CAACoC,IAXI;;AAaxB;AACAnB,EAAAA,OAAO,EAAEjB,SAAS,CAACoC,IAdK;;AAgBxB;AACAlB,EAAAA,eAAe,EAAElB,SAAS,CAACqC,MAjBH;;AAmBxB;;;;AAIAjB,EAAAA,kBAAkB,EAAEpB,SAAS,CAACmC,MAvBN;;AAyBxB;;;;AAIAhB,EAAAA,kBAAkB,EAAEnB,SAAS,CAACmC,MA7BN;;AA+BxB;;;;AAIApB,EAAAA,WAAW,EAAEf,SAAS,CAACmC,MAnCC;;AAqCxB;;;AAGAnB,EAAAA,WAAW,EAAEhB,SAAS,CAACmC,MAxCC;;AA0CxB;AACAtB,EAAAA,UAAU,EAAEb,SAAS,CAACsC,SAAV,CAAoB,CAACtC,SAAS,CAACiC,MAAX,EAAmBjC,SAAS,CAACmC,MAA7B,CAApB,CA3CY;;AA6CxB;AACArB,EAAAA,UAAU,EAAEd,SAAS,CAACsC,SAAV,CAAoB,CAACtC,SAAS,CAACiC,MAAX,EAAmBjC,SAAS,CAACmC,MAA7B,CAApB,CA9CY;;AAgDxB;;;;AAIAd,EAAAA,iBAAiB,EAAErB,SAAS,CAACmC;AApDL,CAA1B,C,CAuDA;;AACA3B,aAAa,CAAC+B,YAAd,GAA6B;AAC3B3B,EAAAA,QAAQ,EAAE,IADiB;AAE3BK,EAAAA,OAAO,EAAE;AAFkB,CAA7B;AAKA,eAAeT,aAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Glide from '@glidejs/glide';\nimport '@glidejs/glide/dist/css/glide.core.min.css';\nimport GlideWrapper, {\n  ButtonControlWrapper,\n  ButtonWrapper,\n  BulletControlWrapper,\n  BulletButton,\n  DefaultBtn,\n} from './glide.style';\n\nconst GlideCarousel = ({\n  className,\n  children,\n  options,\n  controls,\n  prevButton,\n  nextButton,\n  prevWrapper,\n  nextWrapper,\n  bullets,\n  numberOfBullets,\n  buttonWrapperStyle,\n  bulletWrapperStyle,\n  bulletButtonStyle,\n  carouselSelector,\n}) => {\n  // Add all classs to an array\n  const addAllClasses = ['glide'];\n\n  // className prop checking\n  if (className) {\n    addAllClasses.push(className);\n  }\n\n  // number of bullets loop\n  const totalBullets = [];\n  for (let i = 0; i < numberOfBullets; i++) {\n    totalBullets.push(i);\n  }\n\n  // Load glide\n  useEffect(() => {\n    const glide = new Glide(\n      carouselSelector ? `#${carouselSelector}` : '#glide',\n      {\n        ...options,\n      }\n    );\n    glide.mount();\n  });\n\n  return (\n    <GlideWrapper\n      className={addAllClasses.join(' ')}\n      id={carouselSelector || 'glide'}\n    >\n      <div className=\"glide__track\" data-glide-el=\"track\">\n        <ul className=\"glide__slides\">{children}</ul>\n      </div>\n\n      {/** if controls prop true then show glide controls nav */}\n      {controls && (\n        <ButtonControlWrapper\n          className=\"glide__controls\"\n          data-glide-el=\"controls\"\n          {...buttonWrapperStyle}\n        >\n          <ButtonWrapper\n            {...prevWrapper}\n            className=\"glide__prev--area\"\n            data-glide-dir=\"<\"\n            aria-label=\"prev\"\n          >\n            {prevButton ? prevButton : <DefaultBtn>Prev</DefaultBtn>}\n          </ButtonWrapper>\n          <ButtonWrapper\n            {...nextWrapper}\n            className=\"glide__next--area\"\n            data-glide-dir=\">\"\n            aria-label=\"next\"\n          >\n            {nextButton ? nextButton : <DefaultBtn>Next</DefaultBtn>}\n          </ButtonWrapper>\n        </ButtonControlWrapper>\n      )}\n\n      {/** if bullets prop true then show glide bullets nav */}\n      {bullets && (\n        <BulletControlWrapper\n          className=\"glide__bullets\"\n          data-glide-el=\"controls[nav]\"\n          {...bulletWrapperStyle}\n        >\n          <Fragment>\n            {totalBullets.map(index => (\n              <BulletButton\n                key={index}\n                className=\"glide__bullet\"\n                data-glide-dir={`=${index}`}\n                aria-label={`bullet${index + 1}`}\n                {...bulletButtonStyle}\n              />\n            ))}\n          </Fragment>\n        </BulletControlWrapper>\n      )}\n    </GlideWrapper>\n  );\n};\n\nGlideCarousel.propTypes = {\n  /** className of the GlideCarousel. */\n  className: PropTypes.string,\n\n  /** Children. */\n  children: PropTypes.element,\n\n  /** You can add your custom glid options using this prop. */\n  options: PropTypes.object,\n\n  /** Hide || show controls nav. */\n  controls: PropTypes.bool,\n\n  /** Hide || show bullets nav. */\n  bullets: PropTypes.bool,\n\n  /** This prop only take your slider / carousel / testimonials data length. */\n  numberOfBullets: PropTypes.number,\n\n  /** bulletWrapperStyle is a bullet control wrapper style object prop.\n   * It's contain display, space, alignItems,\n   * justifyContent and flexWrap style-system prop.\n   */\n  bulletWrapperStyle: PropTypes.object,\n\n  /** buttonWrapperStyle is a button control wrapper style object prop.\n   * It's contain same as buttonWrapperStyle style-system prop and\n   * position, left, right, top and bottom.\n   */\n  buttonWrapperStyle: PropTypes.object,\n\n  /** prevWrapper is a previous button wrapper style object prop.\n   * It's contain display, space, bg, borders, boxShadow, borderRadius,\n   * position, top, left, right and bottom style-system prop.\n   */\n  prevWrapper: PropTypes.object,\n\n  /** nextWrapper is a next button wrapper style object prop.\n   * It's contain same as prevWrapper style-system prop.\n   */\n  nextWrapper: PropTypes.object,\n\n  /** Set previous button for glide carousel. */\n  prevButton: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n\n  /** Set next button for glide carousel. */\n  nextButton: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n\n  /** bulletButtonStyle is a bullet button style object prop.\n   * It's contain  display, width, height, space,\n   * bg, borders, boxShadow and borderRadius style-system prop.\n   */\n  bulletButtonStyle: PropTypes.object,\n};\n\n// GlideCarousel default props\nGlideCarousel.defaultProps = {\n  controls: true,\n  bullets: false,\n};\n\nexport default GlideCarousel;\n"]},"metadata":{},"sourceType":"module"}