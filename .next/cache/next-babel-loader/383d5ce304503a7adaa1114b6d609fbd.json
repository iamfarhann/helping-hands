{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport Text from '../../Text';\nimport Link from '../../Link';\nimport Image from '../../Image';\n\nconst Logo = (_ref) => {\n  let {\n    logoWrapperStyle,\n    logoStyle,\n    titleStyle,\n    withAchor,\n    anchorProps,\n    logoSrc,\n    title\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"logoWrapperStyle\", \"logoStyle\", \"titleStyle\", \"withAchor\", \"anchorProps\", \"logoSrc\", \"title\"]);\n\n  return __jsx(Link, _extends({}, props, logoWrapperStyle), withAchor ? __jsx(\"a\", anchorProps, logoSrc ? __jsx(Image, _extends({\n    src: logoSrc,\n    alt: title\n  }, logoStyle)) : __jsx(Text, _extends({\n    content: title\n  }, titleStyle))) : __jsx(React.Fragment, null, logoSrc ? __jsx(Image, _extends({\n    src: logoSrc,\n    alt: title\n  }, logoStyle)) : __jsx(Text, _extends({\n    content: title\n  }, titleStyle))));\n};\n\nLogo.defaultProps = {\n  logoWrapperStyle: {\n    display: 'inline-block',\n    mr: '1rem',\n    'a:hover,a:focus': {\n      textDecoration: 'none'\n    }\n  },\n  titleStyle: {\n    display: 'inline-block',\n    fontSize: '2rem',\n    lineHeight: 'inherit',\n    whiteSpace: 'nowrap'\n  }\n};\nexport default Logo;","map":null,"metadata":{},"sourceType":"module"}