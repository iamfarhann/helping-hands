{"ast":null,"code":"var _jsxFileName = \"/Users/mahad/Local Disk/FYP-FE/helping-hands/common/src/components/HelpingHands/DonorList.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { GET_PROJECT_DONATIONS } from \"../../../../lib/queries\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport moment from \"moment\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      width: \"100%\",\n      // maxWidth: \"36ch\",\n      overflow: \"auto\",\n      maxHeight: \"360px\",\n      backgroundColor: theme.palette.background.paper\n    },\n    inline: {\n      display: \"inline\"\n    }\n  };\n});\nexport default function AlignItemsList(_ref) {\n  _s();\n\n  var _this = this;\n\n  var project = _ref.project;\n  var classes = useStyles();\n\n  var _useQuery = useQuery(GET_PROJECT_DONATIONS, {\n    variables: {\n      where: {\n        project: project ? project.id : \"\"\n      },\n      sort: \"createdAt:desc\",\n      start: 0,\n      limit: null\n    },\n    skip: !project\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      refetch = _useQuery.refetch;\n\n  useEffect(function () {\n    if (data) {\n      console.log(data, \"Donations\");\n    }\n  }, [data]);\n  return __jsx(List, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, data ? data.donations.map(function (donation) {\n    return __jsx(React.Fragment, null, __jsx(ListItem, {\n      alignItems: \"flex-start\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }\n    }, __jsx(ListItemAvatar, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }, __jsx(Avatar, {\n      alt: donation.donor.fullName,\n      src: donation.donor.profilePicture ? \"\".concat(process.env.PLAIN_URL).concat(donation.donor.profilePicture.url) : \"\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 19\n      }\n    })), __jsx(ListItemText, {\n      primary: donation.donor.fullName,\n      secondary: __jsx(React.Fragment, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }\n      }, __jsx(Typography, {\n        component: \"span\",\n        variant: \"body2\",\n        className: classes.inline,\n        color: \"textPrimary\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 23\n        }\n      }, \"Rs. \".concat(donation.amount)), \" \\u2014 \".concat(moment(donation.createdAt).fromNow())),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    })), __jsx(Divider, {\n      variant: \"inset\",\n      component: \"li\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }\n    }));\n  }) : __jsx(ListItem, {\n    alignItems: \"flex-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, __jsx(ListItemAvatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, __jsx(Avatar, {\n    alt: \"Remy Sharp\",\n    src: \"https://picsum.photos/200\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  })), __jsx(ListItemText, {\n    primary: \"Ovais Basit\",\n    secondary: __jsx(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 15\n      }\n    }, __jsx(Typography, {\n      component: \"span\",\n      variant: \"body2\",\n      className: classes.inline,\n      color: \"textPrimary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, \"Rs. 120\"), \" â€” yesterday\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  })));\n}\n\n_s(AlignItemsList, \"F9CmgUqdjtSckzAfAtLaO3+7gqg=\", false, function () {\n  return [useStyles, useQuery];\n});\n\n_c = AlignItemsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"AlignItemsList\");","map":{"version":3,"sources":["/Users/mahad/Local Disk/FYP-FE/helping-hands/common/src/components/HelpingHands/DonorList.js"],"names":["React","useEffect","useState","makeStyles","List","ListItem","Divider","ListItemText","ListItemAvatar","Avatar","Typography","GET_PROJECT_DONATIONS","useQuery","useMutation","moment","useStyles","theme","root","width","overflow","maxHeight","backgroundColor","palette","background","paper","inline","display","AlignItemsList","project","classes","variables","where","id","sort","start","limit","skip","data","loading","error","refetch","console","log","donations","map","donation","donor","fullName","profilePicture","process","env","PLAIN_URL","url","amount","createdAt","fromNow"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,qBAAT,QAAsC,yBAAtC;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,qBAAtC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,IAAMC,SAAS,GAAGZ,UAAU,CAAC,UAACa,KAAD;AAAA,SAAY;AACvCC,IAAAA,IAAI,EAAE;AACJC,MAAAA,KAAK,EAAE,MADH;AAEJ;AACAC,MAAAA,QAAQ,EAAE,MAHN;AAIJC,MAAAA,SAAS,EAAE,OAJP;AAKJC,MAAAA,eAAe,EAAEL,KAAK,CAACM,OAAN,CAAcC,UAAd,CAAyBC;AALtC,KADiC;AAQvCC,IAAAA,MAAM,EAAE;AACNC,MAAAA,OAAO,EAAE;AADH;AAR+B,GAAZ;AAAA,CAAD,CAA5B;AAaA,eAAe,SAASC,cAAT,OAAqC;AAAA;;AAAA;;AAAA,MAAXC,OAAW,QAAXA,OAAW;AAClD,MAAMC,OAAO,GAAGd,SAAS,EAAzB;;AADkD,kBAERH,QAAQ,CAACD,qBAAD,EAAwB;AACxEmB,IAAAA,SAAS,EAAE;AACTC,MAAAA,KAAK,EAAE;AAAEH,QAAAA,OAAO,EAAEA,OAAO,GAAGA,OAAO,CAACI,EAAX,GAAgB;AAAlC,OADE;AAETC,MAAAA,IAAI,EAAE,gBAFG;AAGTC,MAAAA,KAAK,EAAE,CAHE;AAITC,MAAAA,KAAK,EAAE;AAJE,KAD6D;AAOxEC,IAAAA,IAAI,EAAE,CAACR;AAPiE,GAAxB,CAFA;AAAA,MAE1CS,IAF0C,aAE1CA,IAF0C;AAAA,MAEpCC,OAFoC,aAEpCA,OAFoC;AAAA,MAE3BC,KAF2B,aAE3BA,KAF2B;AAAA,MAEpBC,OAFoB,aAEpBA,OAFoB;;AAWlDvC,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIoC,IAAJ,EAAU;AACRI,MAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ,EAAkB,WAAlB;AACD;AACF,GAJQ,EAIN,CAACA,IAAD,CAJM,CAAT;AAKA,SACE,MAAC,IAAD;AAAM,IAAA,SAAS,EAAER,OAAO,CAACZ,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGoB,IAAI,GACHA,IAAI,CAACM,SAAL,CAAeC,GAAf,CAAmB,UAACC,QAAD,EAAc;AAC/B,WACE,4BACE,MAAC,QAAD;AAAU,MAAA,UAAU,EAAC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,MAAD;AACE,MAAA,GAAG,EAAEA,QAAQ,CAACC,KAAT,CAAeC,QADtB;AAEE,MAAA,GAAG,EACDF,QAAQ,CAACC,KAAT,CAAeE,cAAf,aACOC,OAAO,CAACC,GAAR,CAAYC,SADnB,SAC+BN,QAAQ,CAACC,KAAT,CAAeE,cAAf,CAA8BI,GAD7D,IAEI,EALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAWE,MAAC,YAAD;AACE,MAAA,OAAO,EAAEP,QAAQ,CAACC,KAAT,CAAeC,QAD1B;AAEE,MAAA,SAAS,EACP,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,UAAD;AACE,QAAA,SAAS,EAAC,MADZ;AAEE,QAAA,OAAO,EAAC,OAFV;AAGE,QAAA,SAAS,EAAElB,OAAO,CAACJ,MAHrB;AAIE,QAAA,KAAK,EAAC,aAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAMUoB,QAAQ,CAACQ,MANnB,EADF,oBASSvC,MAAM,CAAC+B,QAAQ,CAACS,SAAV,CAAN,CAA2BC,OAA3B,EATT,EAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,CADF,EA6BE,MAAC,OAAD;AAAS,MAAA,OAAO,EAAC,OAAjB;AAAyB,MAAA,SAAS,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA7BF,CADF;AAiCD,GAlCD,CADG,GAqCH,MAAC,QAAD;AAAU,IAAA,UAAU,EAAC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,GAAG,EAAC,YAAZ;AAAyB,IAAA,GAAG,EAAC,2BAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE,MAAC,YAAD;AACE,IAAA,OAAO,EAAC,aADV;AAEE,IAAA,SAAS,EACP,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,UAAD;AACE,MAAA,SAAS,EAAC,MADZ;AAEE,MAAA,OAAO,EAAC,OAFV;AAGE,MAAA,SAAS,EAAE1B,OAAO,CAACJ,MAHrB;AAIE,MAAA,KAAK,EAAC,aAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EASG,cATH,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CAtCJ,CADF;AA+DD;;GA/EuBE,c;UACNZ,S,EAC0BH,Q;;;KAFpBe,c","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { GET_PROJECT_DONATIONS } from \"../../../../lib/queries\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport moment from \"moment\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    // maxWidth: \"36ch\",\n    overflow: \"auto\",\n    maxHeight: \"360px\",\n    backgroundColor: theme.palette.background.paper,\n  },\n  inline: {\n    display: \"inline\",\n  },\n}));\n\nexport default function AlignItemsList({ project }) {\n  const classes = useStyles();\n  const { data, loading, error, refetch } = useQuery(GET_PROJECT_DONATIONS, {\n    variables: {\n      where: { project: project ? project.id : \"\" },\n      sort: \"createdAt:desc\",\n      start: 0,\n      limit: null,\n    },\n    skip: !project,\n  });\n  useEffect(() => {\n    if (data) {\n      console.log(data, \"Donations\");\n    }\n  }, [data]);\n  return (\n    <List className={classes.root}>\n      {data ? (\n        data.donations.map((donation) => {\n          return (\n            <>\n              <ListItem alignItems=\"flex-start\">\n                <ListItemAvatar>\n                  <Avatar\n                    alt={donation.donor.fullName}\n                    src={\n                      donation.donor.profilePicture\n                        ? `${process.env.PLAIN_URL}${donation.donor.profilePicture.url}`\n                        : \"\"\n                    }\n                  />\n                </ListItemAvatar>\n                <ListItemText\n                  primary={donation.donor.fullName}\n                  secondary={\n                    <React.Fragment>\n                      <Typography\n                        component=\"span\"\n                        variant=\"body2\"\n                        className={classes.inline}\n                        color=\"textPrimary\"\n                      >\n                        {`Rs. ${donation.amount}`}\n                      </Typography>\n                      {` â€” ${moment(donation.createdAt).fromNow()}`}\n                    </React.Fragment>\n                  }\n                />\n              </ListItem>\n              <Divider variant=\"inset\" component=\"li\" />\n            </>\n          );\n        })\n      ) : (\n        <ListItem alignItems=\"flex-start\">\n          <ListItemAvatar>\n            <Avatar alt=\"Remy Sharp\" src=\"https://picsum.photos/200\" />\n          </ListItemAvatar>\n          <ListItemText\n            primary=\"Ovais Basit\"\n            secondary={\n              <React.Fragment>\n                <Typography\n                  component=\"span\"\n                  variant=\"body2\"\n                  className={classes.inline}\n                  color=\"textPrimary\"\n                >\n                  Rs. 120\n                </Typography>\n                {\" â€” yesterday\"}\n              </React.Fragment>\n            }\n          />\n        </ListItem>\n      )}\n    </List>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}