{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React, { Fragment } from \"react\";\nimport Text from \"../common/src/components/Text\";\nimport Button from \"../common/src/components/Button\";\nimport Link from \"next/link\";\nimport { useState } from \"react\";\nimport Head from \"next/head\";\nimport Sticky from \"react-stickynode\";\nimport { ThemeProvider } from \"styled-components\";\nimport { charityTheme } from \"../common/src/theme/charity\";\nimport { ResetCSS } from \"../common/src/assets/css/style\";\nimport { DrawerProvider } from \"../common/src/contexts/DrawerContext\";\nimport Navbar from \"../containers/Charity/Navbar\";\nimport DrawerSection from \"../containers/Charity/DrawerSection\";\nimport Footer from \"../containers/Charity/Footer\";\nimport { GlobalStyle, CharityWrapper, ContentWrapper } from \"../containers/Charity/charity.style\";\nimport TagSelection from \"../containers/Charity/Tags/tagSelection\";\nimport { Box, Container, Typography, Grid, Paper, Divider } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Heading from \"../common/src/components/Heading\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport BusinessCenterIcon from \"@material-ui/icons/BusinessCenter\";\nimport AssessmentIcon from \"@material-ui/icons/Assessment\";\nimport PowerSettingsNewIcon from \"@material-ui/icons/PowerSettingsNew\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { useData, useDispatchUser } from \"../lib/userData\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport { CREATE_PROJECT } from \"../lib/mutations\";\nimport { DropzoneArea } from \"material-ui-dropzone\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      width: \"100%\",\n      maxWidth: 360,\n      backgroundColor: theme.palette.background.paper\n    }\n  };\n});\n\nvar handleLogout = function handleLogout() {\n  console.log(\"logout called\");\n  cookie.remove(\"token\");\n  dispatch({\n    type: \"LOGOUT\",\n    payload: {}\n  });\n  window.location = \"/\";\n};\n\nexport default (function () {\n  var classes = useStyles();\n  var dispatch = useDispatchUser();\n  var organization = useData(); //returns context\n\n  var _useState = useState([]),\n      filedIds = _useState[0],\n      setFileIDs = _useState[1];\n\n  var _useState2 = useState(null),\n      logo = _useState2[0],\n      setLogo = _useState2[1];\n\n  var _useState3 = useState(null),\n      cover = _useState3[0],\n      setCover = _useState3[1];\n\n  var _useState4 = useState(null),\n      regFile = _useState4[0],\n      setRegFile = _useState4[1];\n\n  var _useState5 = useState(null),\n      taxFile = _useState5[0],\n      setTaxFile = _useState5[1];\n\n  var _useState6 = useState(\"\"),\n      formValues = _useState6[0],\n      setFormValues = _useState6[1];\n\n  var _useState7 = useState(false),\n      createLoading = _useState7[0],\n      setCreateLoading = _useState7[1];\n\n  var _useState8 = useState(\"\"),\n      createError = _useState8[0],\n      setCreateError = _useState8[1];\n\n  var _useState9 = useState(false),\n      fileLoading = _useState9[0],\n      setFileLoading = _useState9[1];\n\n  var _useState10 = useState(\"\"),\n      fileError = _useState10[0],\n      setFileError = _useState10[1];\n\n  var _useMutation = useMutation(CREATE_PROJECT, {\n    onCompleted: function onCompleted(data) {\n      console.log(data); // dispatch({\n      //   type: \"UPDATE\",\n      //   payload: data.updateOrganization.organization,\n      // });\n\n      setCreateError(\"Project Added succesfully!\");\n      setCreateLoading(false);\n      handleReset();\n    },\n    onError: function onError(error) {\n      console.log(error);\n      setCreateError(\"Sorry an error occurred. Please try again!\");\n    }\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      createProject = _useMutation2[0];\n\n  var schemas = [{\n    name: Yup.string().required(\"Please Enter Project Title\"),\n    targetAmount: Yup.number().required(\"Please Enter Target Amount\"),\n    shortDescription: Yup.string().required(\"Please Enter Short Description\"),\n    description: Yup.string().required(\"Please Enter Project Details\"),\n    titleImage: Yup.string().required(\"Please Upload a title image\"),\n    relatedImages: Yup.array(),\n    tags: Yup.array()\n  }];\n\n  var _useFormik = useFormik({\n    initialValues: {\n      name: \"\",\n      targetAmount: 0,\n      shortDescription: \"\",\n      description: \"\",\n      titleImage: \"\",\n      relatedImages: [],\n      tags: []\n    },\n    onSubmit: function onSubmit(values) {\n      console.log(\"On Submit\");\n      console.log(values);\n      setCreateLoading(true);\n      setCreateError(null);\n      createProject({\n        variables: {\n          fields: {\n            data: {\n              titleImage: values.titleImage,\n              relatedImages: values.relatedImages.length ? values.relatedImages : null,\n              name: values.name,\n              targetAmount: values.targetAmount,\n              shortDescription: values.shortDescription,\n              description: values.description,\n              organization: organization.id,\n              status: \"active\",\n              tags: values.tags.length ? values.tags.map(function (item) {\n                return item.id;\n              }) : null\n            }\n          }\n        }\n      });\n    },\n    validationSchema: Yup.object().shape(schemas[0])\n  }),\n      handleBlur = _useFormik.handleBlur,\n      handleChange = _useFormik.handleChange,\n      handleSubmit = _useFormik.handleSubmit,\n      handleReset = _useFormik.handleReset,\n      values = _useFormik.values,\n      touched = _useFormik.touched,\n      errors = _useFormik.errors,\n      setFieldValue = _useFormik.setFieldValue;\n\n  var handlefiles = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(files, type) {\n      var form;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(files, type);\n\n              if (!files.length) {\n                _context.next = 16;\n                break;\n              }\n\n              setCreateLoading(true);\n              form = new FormData();\n              files.forEach(function (file) {\n                form.append(\"files\", file);\n              });\n              _context.prev = 5;\n              _context.next = 8;\n              return axios.post(\"http://localhost:1337/upload\", form, {\n                headers: {\n                  \"Content-type\": \"multipart/form-data\"\n                }\n              }).then(function (res) {\n                console.log(res.data); //setFileIDs([...filedIds, ...res.data]);\n\n                if (type == \"titleImage\") {\n                  setFieldValue(\"titleImage\", res.data[0].id);\n                }\n\n                if (type == \"relatedImages\") {\n                  var images = [];\n                  res.data.map(function (img) {\n                    images.push(img.id);\n                  });\n                  setFieldValue(\"relatedImages\", images);\n                }\n\n                setCreateLoading(false);\n              });\n\n            case 8:\n              _context.next = 14;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](5);\n              console.log(_context.t0, \"error\");\n              setCreateError(\"Sorry an error occurred. Please try again!\");\n\n            case 14:\n              _context.next = 17;\n              break;\n\n            case 16:\n              setFieldValue(\"titleImage\", \"\");\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[5, 10]]);\n    }));\n\n    return function handlefiles(_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(ThemeProvider, {\n    theme: charityTheme\n  }, __jsx(Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"My Account | Esaar\"), __jsx(\"meta\", {\n    name: \"Description\",\n    content: \"React next landing page\"\n  }), __jsx(\"meta\", {\n    name: \"theme-color\",\n    content: \"#FCF22B\"\n  }), __jsx(\"meta\", {\n    name: \"viewport\",\n    content: \"width=device-width, initial-scale=1.0\"\n  }), __jsx(\"link\", {\n    href: \"https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700,800&display=swap\",\n    rel: \"stylesheet\"\n  })), __jsx(ResetCSS, null), __jsx(GlobalStyle, null), __jsx(CharityWrapper, null, __jsx(Sticky, {\n    top: 0,\n    innerZ: 9999,\n    activeClass: \"sticky-nav-active\"\n  }, __jsx(Navbar, null)), __jsx(DrawerProvider, null, __jsx(DrawerSection, null)), __jsx(ContentWrapper, null, __jsx(Grid, {\n    container: true,\n    style: {\n      maxWidth: \"1170px\",\n      minHeight: \"100vh\",\n      paddingTop: \"140px\",\n      marginLeft: \"170px\"\n    }\n  }, __jsx(Grid, {\n    item: true,\n    md: 3\n  }, __jsx(Paper, {\n    style: {\n      height: \"100%\"\n    }\n  }, __jsx(Container, {\n    style: {\n      padding: \"40px\"\n    }\n  }, __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(List, {\n    component: \"nav\",\n    \"aria-label\": \"main mailbox folders\"\n  }, __jsx(Link, {\n    href: \"/account_o\"\n  }, __jsx(ListItem, {\n    button: true\n  }, __jsx(ListItemIcon, null, __jsx(AccountCircleIcon, null)), __jsx(ListItemText, {\n    primary: \"Account\"\n  }))), __jsx(Divider, null), __jsx(Link, {\n    href: \"/addProject\"\n  }, __jsx(ListItem, {\n    button: true\n  }, __jsx(ListItemIcon, null, __jsx(BusinessCenterIcon, null)), __jsx(ListItemText, {\n    primary: \"Add Project \"\n  }))), __jsx(Divider, null), __jsx(Link, {\n    href: \"/myProjects\"\n  }, __jsx(ListItem, {\n    button: true\n  }, __jsx(ListItemIcon, null, __jsx(AssessmentIcon, null)), __jsx(ListItemText, {\n    primary: \"Projects\"\n  }))), __jsx(Divider, null), __jsx(ListItem, {\n    button: true,\n    onClick: handleLogout\n  }, __jsx(ListItemIcon, null, __jsx(PowerSettingsNewIcon, null)), __jsx(ListItemText, {\n    primary: \"Logout\"\n  }))))))), __jsx(Grid, {\n    item: true,\n    md: 8,\n    style: {\n      marginLeft: \"30px\"\n    }\n  }, __jsx(Paper, {\n    style: {\n      height: \"100%\"\n    }\n  }, __jsx(Container, {\n    style: {\n      padding: \"40px\"\n    }\n  }, \" \", __jsx(Heading, {\n    content: \"Add Project\",\n    color: \"#05B890\"\n  }), \" \", __jsx(Divider, null), __jsx(Grid, {\n    item: true,\n    md: 7,\n    style: {\n      marginTop: \"30px\"\n    }\n  }, __jsx(Heading, {\n    content: \"Project Title\",\n    as: \"h4\",\n    style: {\n      marginTop: \"1rem\"\n    }\n  }), \" \", __jsx(TextField, {\n    name: \"name\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    error: errors.name && touched.name,\n    helperText: errors.name && touched.name ? errors.name : null,\n    label: \"\",\n    variant: \"outlined\",\n    size: \"small\",\n    style: {\n      color: \"#3E2672\"\n    },\n    fullWidth: true\n  }), __jsx(Heading, {\n    content: \"Target Amount\",\n    as: \"h4\",\n    style: {\n      marginTop: \"1rem\"\n    }\n  }), \" \", __jsx(TextField, {\n    name: \"targetAmount\",\n    type: \"number\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    error: errors.targetAmount && touched.targetAmount,\n    helperText: errors.targetAmount && touched.targetAmount ? errors.targetAmount : null,\n    id: \"outlined-basic\",\n    label: \"in PKR\",\n    variant: \"outlined\",\n    size: \"small\",\n    fullWidth: true\n  }), __jsx(TagSelection, {\n    values: values,\n    setFieldValue: setFieldValue\n  }), __jsx(Heading, {\n    content: \"Short Description\",\n    as: \"h4\",\n    style: {\n      marginTop: \"1rem\"\n    }\n  }), \" \", __jsx(TextField, {\n    name: \"shortDescription\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    error: errors.shortDescription && touched.shortDescription,\n    helperText: errors.shortDescription && touched.shortDescription ? errors.shortDescription : null,\n    id: \"outlined-basic\",\n    label: \"\",\n    variant: \"outlined\",\n    size: \"small\",\n    style: {\n      color: \"#05B890\"\n    },\n    fullWidth: true\n  }), __jsx(Heading, {\n    content: \"Project Details\",\n    as: \"h4\",\n    style: {\n      marginTop: \"1rem\"\n    }\n  }), \" \", __jsx(TextField, {\n    name: \"description\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    error: errors.description && touched.description,\n    helperText: errors.description && touched.description ? errors.description : null,\n    id: \"outlined-basic\",\n    label: \"\",\n    variant: \"outlined\",\n    size: \"large\",\n    multiline: true,\n    rows: 5,\n    style: {\n      color: \"#05B890\"\n    },\n    fullWidth: true\n  })), __jsx(Heading, {\n    content: \"Title Image\",\n    as: \"h4\",\n    style: {\n      marginTop: \"1rem\"\n    }\n  }), __jsx(DropzoneArea, {\n    acceptedFiles: [\"image/*\"],\n    dropzoneText: \"Drag and drop an image here or click\",\n    onChange: function onChange(files) {\n      return handlefiles(files, \"titleImage\");\n    }\n  }), errors.titleImage ? __jsx(Text, {\n    style: {\n      color: \"orange\"\n    },\n    content: errors.titleImage\n  }) : null, __jsx(Heading, {\n    content: \"Related Images\",\n    as: \"h4\",\n    style: {\n      marginTop: \"1rem\"\n    }\n  }), __jsx(DropzoneArea, {\n    acceptedFiles: [\"image/*\"],\n    dropzoneText: \"Drag and drop images here or click\",\n    onChange: function onChange(files) {\n      return handlefiles(files, \"relatedImages\");\n    }\n  })), __jsx(Grid, {\n    container: true,\n    item: true,\n    md: 12,\n    style: {\n      paddingLeft: \"40px\",\n      alignContent: \"center\"\n    }\n  }, createError ? __jsx(Text, {\n    style: {\n      color: \"orange\"\n    },\n    content: createError\n  }) : null), __jsx(Grid, {\n    container: true,\n    item: true,\n    md: 12,\n    style: {\n      alignContent: \"center\"\n    }\n  }, __jsx(Button, {\n    title: \"Create Project\",\n    variant: \"extendedFab\",\n    onClick: handleSubmit,\n    disabled: createLoading,\n    isLoading: createLoading,\n    style: {\n      marginTop: \"20px\",\n      marginLeft: \"260px\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      minWidth: \"200px\",\n      height: \"auto\"\n    }\n  })))))), __jsx(Footer, null))));\n});","map":null,"metadata":{},"sourceType":"module"}