{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { GET_PROJECT_DONATIONS } from \"../../../../lib/queries\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport moment from \"moment\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    // maxWidth: \"36ch\",\n    overflow: \"auto\",\n    maxHeight: \"360px\",\n    backgroundColor: theme.palette.background.paper\n  },\n  inline: {\n    display: \"inline\"\n  }\n}));\nexport default function AlignItemsList({\n  project\n}) {\n  const classes = useStyles();\n  const {\n    data,\n    loading,\n    error,\n    refetch\n  } = useQuery(GET_PROJECT_DONATIONS, {\n    variables: {\n      where: {\n        project: project ? project.id : \"\"\n      },\n      sort: \"createdAt:desc\",\n      start: 0,\n      limit: null\n    },\n    skip: !project\n  });\n  useEffect(() => {\n    if (data) {\n      console.log(data, \"Donations\");\n    }\n  }, [data]);\n  return __jsx(List, {\n    className: classes.root\n  }, data ? data.donations.map(donation => {\n    return __jsx(React.Fragment, null, __jsx(ListItem, {\n      alignItems: \"flex-start\"\n    }, __jsx(ListItemAvatar, null, __jsx(Avatar, {\n      alt: donation.donor.fullName,\n      src: donation.donor.profilePicture ? `${process.env.PLAIN_URL}${donation.donor.profilePicture.url}` : null\n    })), __jsx(ListItemText, {\n      primary: donation.donor.fullName,\n      secondary: __jsx(React.Fragment, null, __jsx(Typography, {\n        component: \"span\",\n        variant: \"body2\",\n        className: classes.inline,\n        color: \"textPrimary\"\n      }, `Rs. ${donation.amount}`), ` â€” ${moment(donation.createdAt).fromNow()}`)\n    })), __jsx(Divider, {\n      variant: \"inset\",\n      component: \"li\"\n    }));\n  }) : __jsx(React.Fragment, null, __jsx(ListItem, {\n    alignItems: \"flex-start\"\n  }, __jsx(ListItemAvatar, null, __jsx(Skeleton, {\n    animation: \"wave\",\n    variant: \"circle\",\n    width: 40,\n    height: 40\n  })), __jsx(ListItemText, {\n    disableTypography: true,\n    primary: __jsx(Skeleton, {\n      animation: \"wave\",\n      height: 10,\n      width: \"80%\"\n    }),\n    secondary: __jsx(Skeleton, {\n      animation: \"wave\",\n      height: 10,\n      width: \"60%\"\n    })\n  })), __jsx(ListItem, {\n    alignItems: \"flex-start\"\n  }, __jsx(ListItemAvatar, null, __jsx(Skeleton, {\n    animation: \"wave\",\n    variant: \"circle\",\n    width: 40,\n    height: 40\n  })), __jsx(ListItemText, {\n    disableTypography: true,\n    primary: __jsx(Skeleton, {\n      animation: \"wave\",\n      height: 10,\n      width: \"80%\"\n    }),\n    secondary: __jsx(Skeleton, {\n      animation: \"wave\",\n      height: 10,\n      width: \"60%\"\n    })\n  })), __jsx(ListItem, {\n    alignItems: \"flex-start\"\n  }, __jsx(ListItemAvatar, null, __jsx(Skeleton, {\n    animation: \"wave\",\n    variant: \"circle\",\n    width: 40,\n    height: 40\n  })), __jsx(ListItemText, {\n    disableTypography: true,\n    primary: __jsx(Skeleton, {\n      animation: \"wave\",\n      height: 10,\n      width: \"80%\"\n    }),\n    secondary: __jsx(Skeleton, {\n      animation: \"wave\",\n      height: 10,\n      width: \"60%\"\n    })\n  }))));\n}","map":null,"metadata":{},"sourceType":"module"}