{"ast":null,"code":"var _s2 = $RefreshSig$();\n\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/mahad/Local Disk/untitled folder/helping-hands/common/src/components/InputGroup/index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport useOnClickOutside from 'common/src/hooks/useOnClickOutside';\nimport ComponentWrapper, { Input, SelectWrapper, CurrentOption, Dropdown } from './inputGroup.style';\n\nvar InputGroup = function InputGroup(_ref) {\n  _s2();\n\n  _s();\n\n  var className = _ref.className,\n      inputType = _ref.inputType,\n      placeholder = _ref.placeholder,\n      selectOptions = _ref.selectOptions,\n      inputValue = _ref.inputValue,\n      inputOnChange = _ref.inputOnChange,\n      selectOnUpdate = _ref.selectOnUpdate,\n      selectedValue = _ref.selectedValue,\n      currency = _ref.currency;\n\n  var _useState = useState({\n    open: false,\n    currency: currency,\n    selectedValue: selectedValue\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var handleDropdown = function handleDropdown() {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      open: !state.open\n    }));\n  };\n\n  var handleSelectedData = function handleSelectedData(item) {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      open: false,\n      currency: item.title,\n      selectedValue: item.value\n    }));\n    selectOnUpdate(item.value);\n  };\n\n  var dropdownRef = useRef(null);\n  useOnClickOutside(dropdownRef, function () {\n    return setState(_objectSpread(_objectSpread({}, state), {}, {\n      open: false\n    }));\n  });\n  var addAllClasses = ['input_group'];\n\n  if (className) {\n    addAllClasses.push(className);\n  }\n\n  return __jsx(ComponentWrapper, {\n    className: addAllClasses.join(' '),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, __jsx(Input, {\n    type: inputType,\n    value: inputValue,\n    placeholder: placeholder,\n    onChange: inputOnChange,\n    required: true,\n    \"aria-label\": \"input\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }), __jsx(SelectWrapper, {\n    className: \"select_wrapper\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, __jsx(CurrentOption, {\n    className: \"current_option\",\n    onClick: handleDropdown,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, __jsx(\"span\", {\n    className: \"text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, state.currency), __jsx(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"14.994\",\n    height: \"10.993\",\n    viewBox: \"0 0 14.994 10.993\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, __jsx(\"path\", {\n    d: \"M1452.115,6490.792l-7.028-10.076a.449.449,0,0,1-.083-.26.441.441,0,0,1,.055-.212.467.467,0,0,1,.414-.244h14.056a.467.467,0,0,1,.414.244.445.445,0,0,1-.028.472l-7.028,10.077a.473.473,0,0,1-.773,0Zm0,0\",\n    transform: \"translate(-1445.005 -6480)\",\n    fill: \"#bac2c9\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }))), __jsx(Dropdown, {\n    className: \"dropdown \".concat(state.open ? 'active' : 'hide'),\n    ref: dropdownRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, selectOptions.map(function (item) {\n    return __jsx(\"li\", {\n      className: state.selectedValue === item.value.toLowerCase() ? 'selected' : '',\n      key: \"option_key\".concat(item.id),\n      data: item.value.toLowerCase(),\n      onClick: function onClick() {\n        return handleSelectedData(item);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, item.title);\n  }))));\n};\n\n_s2(InputGroup, \"VM8KgLI3M3Xc5xtOmsk61VAtFN4=\", false, function () {\n  return [useOnClickOutside];\n});\n\n_c2 = InputGroup;\n\n_s(InputGroup, \"N+9jcicwmnl6o6Z9up8rIA1x5zs=\", false, function () {\n  return [useOnClickOutside];\n});\n\n_c = InputGroup;\nInputGroup.propTypes = {\n  /** className of the InputGroup. */\n  className: PropTypes.string,\n\n  /** inputType prop for input field type. This should be a number or text. */\n  inputType: PropTypes.oneOf(['number', 'text']),\n\n  /** placeholder text for input field type. */\n  placeholder: PropTypes.string,\n\n  /** Call back function for inout onChange event. */\n  inputOnChange: PropTypes.func,\n\n  /** currency prop shoude be a string with currency name and symbol. */\n  currency: PropTypes.string,\n\n  /** selectedValue pron shoube be a currency string without symbol but in lowercase. */\n  selectedValue: PropTypes.string,\n\n  /** selectOptions prop contain a set of data in array of object form. It has 3 properties id, value and title. */\n  selectOptions: PropTypes.array,\n\n  /** It contain selected data. */\n  selectOnUpdate: PropTypes.func\n};\nInputGroup.defaultProps = {\n  inputType: 'number',\n  selectOptions: [],\n  inputOnChange: function inputOnChange() {},\n  selectOnUpdate: function selectOnUpdate() {}\n};\nexport default InputGroup;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputGroup\");\n\nvar _c2;\n\n$RefreshReg$(_c2, \"InputGroup\");","map":{"version":3,"sources":["/Users/mahad/Local Disk/untitled folder/helping-hands/common/src/components/InputGroup/index.js"],"names":["InputGroup","className","inputType","placeholder","selectOptions","inputValue","inputOnChange","selectOnUpdate","selectedValue","currency","state","setState","useState","open","handleDropdown","handleSelectedData","item","value","dropdownRef","useRef","useOnClickOutside","addAllClasses","PropTypes","func"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport useOnClickOutside from 'common/src/hooks/useOnClickOutside';\nimport ComponentWrapper, {\n  Input,\n  SelectWrapper,\n  CurrentOption,\n  Dropdown,\n} from './inputGroup.style';\n\nconst InputGroup = ({\n  className,\n  inputType,\n  placeholder,\n  selectOptions,\n  inputValue,\n  inputOnChange,\n  selectOnUpdate,\n  selectedValue,\n  currency,\n}) => {\n  const [state, setState] = useState({\n    open: false,\n    currency,\n    selectedValue,\n  });\n\n  const handleDropdown = () => {\n    setState({\n      ...state,\n      open: !state.open,\n    });\n  };\n\n  const handleSelectedData = item => {\n    setState({\n      ...state,\n      open: false,\n      currency: item.title,\n      selectedValue: item.value,\n    });\n    selectOnUpdate(item.value);\n  };\n\n  const dropdownRef = useRef(null);\n  useOnClickOutside(dropdownRef, () => setState({ ...state, open: false }));\n\n  const addAllClasses = ['input_group'];\n  if (className) {\n    addAllClasses.push(className);\n  }\n\n  return (\n    <ComponentWrapper className={addAllClasses.join(' ')}>\n      <Input\n        type={inputType}\n        value={inputValue}\n        placeholder={placeholder}\n        onChange={inputOnChange}\n        required={true}\n        aria-label=\"input\"\n      />\n      <SelectWrapper className=\"select_wrapper\">\n        <CurrentOption className=\"current_option\" onClick={handleDropdown}>\n          <span className=\"text\">{state.currency}</span>\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"14.994\"\n            height=\"10.993\"\n            viewBox=\"0 0 14.994 10.993\"\n          >\n            <path\n              d=\"M1452.115,6490.792l-7.028-10.076a.449.449,0,0,1-.083-.26.441.441,0,0,1,.055-.212.467.467,0,0,1,.414-.244h14.056a.467.467,0,0,1,.414.244.445.445,0,0,1-.028.472l-7.028,10.077a.473.473,0,0,1-.773,0Zm0,0\"\n              transform=\"translate(-1445.005 -6480)\"\n              fill=\"#bac2c9\"\n            />\n          </svg>\n        </CurrentOption>\n        <Dropdown\n          className={`dropdown ${state.open ? 'active' : 'hide'}`}\n          ref={dropdownRef}\n        >\n          {selectOptions.map(item => (\n            <li\n              className={\n                state.selectedValue === item.value.toLowerCase()\n                  ? 'selected'\n                  : ''\n              }\n              key={`option_key${item.id}`}\n              data={item.value.toLowerCase()}\n              onClick={() => handleSelectedData(item)}\n            >\n              {item.title}\n            </li>\n          ))}\n        </Dropdown>\n      </SelectWrapper>\n    </ComponentWrapper>\n  );\n};\n\nInputGroup.propTypes = {\n  /** className of the InputGroup. */\n  className: PropTypes.string,\n  /** inputType prop for input field type. This should be a number or text. */\n  inputType: PropTypes.oneOf(['number', 'text']),\n  /** placeholder text for input field type. */\n  placeholder: PropTypes.string,\n  /** Call back function for inout onChange event. */\n  inputOnChange: PropTypes.func,\n  /** currency prop shoude be a string with currency name and symbol. */\n  currency: PropTypes.string,\n  /** selectedValue pron shoube be a currency string without symbol but in lowercase. */\n  selectedValue: PropTypes.string,\n  /** selectOptions prop contain a set of data in array of object form. It has 3 properties id, value and title. */\n  selectOptions: PropTypes.array,\n  /** It contain selected data. */\n  selectOnUpdate: PropTypes.func,\n};\n\nInputGroup.defaultProps = {\n  inputType: 'number',\n  selectOptions: [],\n  inputOnChange: () => {},\n  selectOnUpdate: () => {},\n};\n\nexport default InputGroup;\n"]},"metadata":{},"sourceType":"module"}