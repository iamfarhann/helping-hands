{"ast":null,"code":"var _jsxFileName = \"/Users/mahad/Local Disk/untitled folder/helping-hands/common/src/components/FeatureBlock/index.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport FeatureBlockWrapper, { IconWrapper, ContentWrapper, ButtonWrapper } from './featureBlock.style';\n\nconst FeatureBlock = _ref => {\n  let {\n    className,\n    icon,\n    title,\n    button,\n    description,\n    iconPosition,\n    additionalContent,\n    wrapperStyle,\n    iconStyle,\n    contentStyle,\n    btnWrapperStyle\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"className\", \"icon\", \"title\", \"button\", \"description\", \"iconPosition\", \"additionalContent\", \"wrapperStyle\", \"iconStyle\", \"contentStyle\", \"btnWrapperStyle\"]); // Add all classs to an array\n\n\n  const addAllClasses = ['feature__block']; // Add icon position class\n\n  if (iconPosition) {\n    addAllClasses.push(`icon_${iconPosition}`);\n  } // className prop checking\n\n\n  if (className) {\n    addAllClasses.push(className);\n  } // check icon value and add\n\n\n  const Icon = icon && __jsx(IconWrapper, _extends({\n    className: \"icon__wrapper\"\n  }, iconStyle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }), icon);\n\n  return __jsx(FeatureBlockWrapper, _extends({\n    className: addAllClasses.join(' ')\n  }, wrapperStyle, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }), Icon, title || description || button ? __jsx(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, __jsx(ContentWrapper, _extends({\n    className: \"content__wrapper\"\n  }, contentStyle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }), title, description, button && __jsx(ButtonWrapper, _extends({\n    className: \"button__wrapper\"\n  }, btnWrapperStyle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }), button)), additionalContent) : '');\n};\n\nFeatureBlock.propTypes = {\n  /** ClassName of the FeatureBlock */\n  className: PropTypes.string,\n\n  /** title prop contain a react component. You can use our Heading component from reusecore */\n  title: PropTypes.element,\n\n  /** description prop contain a react component. You can use our Text component from reusecore */\n  description: PropTypes.element,\n\n  /** button prop contain a react component. You can use our Button component from reusecore */\n  button: PropTypes.element,\n\n  /** Set icon position of the FeatureBlock */\n  iconPosition: PropTypes.oneOf(['top', 'left', 'right']),\n\n  /** wrapperStyle prop contain these style system props:  display, flexWrap, width, height, alignItems,\n   * justifyContent, position, overflow, space, color, borders, borderColor, boxShadow and borderRadius. */\n  wrapperStyle: PropTypes.object,\n\n  /** iconStyle prop contain these style system props: display, width, height, alignItems, justifyContent,\n   * position, space, fontSize, color, borders, overflow, borderColor, boxShadow and borderRadius. */\n  iconStyle: PropTypes.object,\n\n  /** contentStyle prop contain these style system props: width, textAlign and space. */\n  contentStyle: PropTypes.object,\n\n  /** btnWrapperStyle prop contain these style system props: display, space, alignItems,\n   * flexDirection and justifyContent. */\n  btnWrapperStyle: PropTypes.object\n};\nFeatureBlock.defaultProps = {\n  iconPosition: 'top'\n};\nexport default FeatureBlock;","map":{"version":3,"sources":["/Users/mahad/Local Disk/untitled folder/helping-hands/common/src/components/FeatureBlock/index.js"],"names":["FeatureBlock","btnWrapperStyle","props","addAllClasses","iconPosition","Icon","icon","title","button","className","PropTypes","description","wrapperStyle","iconStyle","contentStyle","object"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport FeatureBlockWrapper, {\n  IconWrapper,\n  ContentWrapper,\n  ButtonWrapper,\n} from './featureBlock.style';\n\nconst FeatureBlock = ({\n  className,\n  icon,\n  title,\n  button,\n  description,\n  iconPosition,\n  additionalContent,\n  wrapperStyle,\n  iconStyle,\n  contentStyle,\n  btnWrapperStyle,\n  ...props\n}) => {\n  // Add all classs to an array\n  const addAllClasses = ['feature__block'];\n\n  // Add icon position class\n  if (iconPosition) {\n    addAllClasses.push(`icon_${iconPosition}`);\n  }\n\n  // className prop checking\n  if (className) {\n    addAllClasses.push(className);\n  }\n\n  // check icon value and add\n  const Icon = icon && (\n    <IconWrapper className=\"icon__wrapper\" {...iconStyle}>\n      {icon}\n    </IconWrapper>\n  );\n\n  return (\n    <FeatureBlockWrapper\n      className={addAllClasses.join(' ')}\n      {...wrapperStyle}\n      {...props}\n    >\n      {Icon}\n\n      {title || description || button ? (\n        <Fragment>\n          <ContentWrapper className=\"content__wrapper\" {...contentStyle}>\n            {title}\n            {description}\n            {button && (\n              <ButtonWrapper className=\"button__wrapper\" {...btnWrapperStyle}>\n                {button}\n              </ButtonWrapper>\n            )}\n          </ContentWrapper>\n          {additionalContent}\n        </Fragment>\n      ) : (\n        ''\n      )}\n    </FeatureBlockWrapper>\n  );\n};\n\nFeatureBlock.propTypes = {\n  /** ClassName of the FeatureBlock */\n  className: PropTypes.string,\n\n  /** title prop contain a react component. You can use our Heading component from reusecore */\n  title: PropTypes.element,\n\n  /** description prop contain a react component. You can use our Text component from reusecore */\n  description: PropTypes.element,\n\n  /** button prop contain a react component. You can use our Button component from reusecore */\n  button: PropTypes.element,\n\n  /** Set icon position of the FeatureBlock */\n  iconPosition: PropTypes.oneOf(['top', 'left', 'right']),\n\n  /** wrapperStyle prop contain these style system props:  display, flexWrap, width, height, alignItems,\n   * justifyContent, position, overflow, space, color, borders, borderColor, boxShadow and borderRadius. */\n  wrapperStyle: PropTypes.object,\n\n  /** iconStyle prop contain these style system props: display, width, height, alignItems, justifyContent,\n   * position, space, fontSize, color, borders, overflow, borderColor, boxShadow and borderRadius. */\n  iconStyle: PropTypes.object,\n\n  /** contentStyle prop contain these style system props: width, textAlign and space. */\n  contentStyle: PropTypes.object,\n\n  /** btnWrapperStyle prop contain these style system props: display, space, alignItems,\n   * flexDirection and justifyContent. */\n  btnWrapperStyle: PropTypes.object,\n};\n\nFeatureBlock.defaultProps = {\n  iconPosition: 'top',\n};\n\nexport default FeatureBlock;\n"]},"metadata":{},"sourceType":"module"}