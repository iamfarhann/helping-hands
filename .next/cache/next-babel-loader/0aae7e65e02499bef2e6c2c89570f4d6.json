{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Heading from \"../../../common/src/components/Heading\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport Chip from \"@material-ui/core/Chip\";\nimport { GET_TAGS } from \"../../../lib/queries\";\nimport { Divider } from \"@material-ui/core\"; //import DoneIcon from '@material-ui/icons/Done';\n\nconst useStyles = makeStyles(theme => ({}));\nexport default function TagSelection({\n  values,\n  setFieldValue\n}) {\n  const classes = useStyles();\n  const {\n    0: addTags,\n    1: setAddTags\n  } = useState([]);\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(GET_TAGS, {\n    skip: !values\n  });\n  useEffect(() => {\n    if (data) {\n      setAddTags(data.tags);\n    }\n  }, [data, loading]);\n\n  const handleAddTag = tag => {\n    console.log(tag);\n    setAddTags(item => item.filter(fet => fet.id != tag.id));\n    setFieldValue(\"tags\", values.tags.concat(tag));\n  };\n\n  const handleDeleteTag = tag => {\n    console.log(tag);\n    setFieldValue(\"tags\", values.tags.filter(fet => fet.id != tag.id));\n    setAddTags(addTags => addTags.concat(tag));\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Heading, {\n    content: \"Tags\",\n    as: \"h4\",\n    style: {\n      marginTop: \"1rem\"\n    }\n  }), !values.tags.length && __jsx(Heading, {\n    as: \"h6\",\n    content: \"No Additional Tag Selected\"\n  }), values.tags.map(tag => {\n    return __jsx(Chip, {\n      key: tag.id,\n      size: \"small\",\n      color: \"secondary\",\n      label: tag.name,\n      style: {\n        margin: \"3px\"\n      },\n      onDelete: () => handleDeleteTag(tag)\n    });\n  }), __jsx(Divider, {\n    style: {\n      marginTop: \"10px\",\n      marginBottom: \"10px\"\n    }\n  }), !addTags.length ? __jsx(Heading, {\n    as: \"h6\",\n    content: \"No Additional Tags Left\"\n  }) : __jsx(Heading, {\n    as: \"h6\",\n    content: \"Click to add tags\"\n  }), addTags.map(tag => {\n    return __jsx(Chip, {\n      key: tag.id,\n      size: \"small\",\n      variant: \"outlined\",\n      color: \"secondary\",\n      label: tag.name,\n      style: {\n        margin: \"3px\"\n      },\n      onClick: () => handleAddTag(tag)\n    });\n  }));\n}","map":null,"metadata":{},"sourceType":"module"}