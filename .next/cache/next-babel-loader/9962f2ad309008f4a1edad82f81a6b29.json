{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/mahad/Local Disk/untitled folder/helping-hands/containers/Agency/Navbar/index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { openModal, closeModal } from '@redq/reuse-modal';\nimport NavbarWrapper from '../../../common/src/components/Navbar';\nimport Drawer from '../../../common/src/components/Drawer';\nimport Button from '../../../common/src/components/Button';\nimport Logo from '../../../common/src/components/UIElements/Logo';\nimport HamburgMenu from '../../../common/src/components/HamburgMenu';\nimport ScrollSpyMenu from '../../../common/src/components/ScrollSpyMenu';\nimport { Container } from './navbar.style';\nimport SearchPanel from '../SearchPanel';\nimport LoginModal from '../LoginModal';\nimport CopyrightSection from '../CopyrightsSection'; // import LogoImage from '../../../common/src/assets/image/agency/logo.png';\n\nimport { DrawerContext } from '../../../common/src/contexts/DrawerContext';\nimport data from '../../../common/src/data/Agency/'; // Default close button for modal\n\nvar CloseModalButton = function CloseModalButton() {\n  return __jsx(Button, {\n    className: \"modalCloseBtn\",\n    variant: \"fab\",\n    onClick: function onClick() {\n      return closeModal();\n    },\n    icon: __jsx(\"i\", {\n      className: \"flaticon-plus-symbol\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 3\n    }\n  });\n}; // Alt close button for modal\n\n\n_c = CloseModalButton;\n\nvar CloseModalButtonAlt = function CloseModalButtonAlt() {\n  return __jsx(Button, {\n    className: \"modalCloseBtn alt\",\n    variant: \"fab\",\n    onClick: function onClick() {\n      return closeModal();\n    },\n    icon: __jsx(\"i\", {\n      className: \"flaticon-plus-symbol\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 3\n    }\n  });\n};\n\n_c2 = CloseModalButtonAlt;\n\nvar Navbar = function Navbar(_ref) {\n  _s();\n\n  var navbarStyle = _ref.navbarStyle,\n      logoStyle = _ref.logoStyle;\n\n  var _useContext = useContext(DrawerContext),\n      state = _useContext.state,\n      dispatch = _useContext.dispatch; // Search modal handler\n\n\n  var handleSearchModal = function handleSearchModal() {\n    openModal({\n      config: {\n        className: 'search-modal',\n        disableDragging: true,\n        width: '100%',\n        height: '100%',\n        animationFrom: {\n          transform: 'translateY(100px)'\n        },\n        // react-spring <Spring from={}> props value\n        animationTo: {\n          transform: 'translateY(0)'\n        },\n        //  react-spring <Spring to={}> props value\n        transition: {\n          mass: 1,\n          tension: 180,\n          friction: 26\n        }\n      },\n      component: SearchPanel,\n      componentProps: {},\n      closeComponent: CloseModalButtonAlt,\n      closeOnClickOutside: false\n    });\n  }; // Authentication modal handler\n\n\n  var handleLoginModal = function handleLoginModal() {\n    openModal({\n      config: {\n        className: 'login-modal',\n        disableDragging: true,\n        width: '100%',\n        height: '100%',\n        animationFrom: {\n          transform: 'translateY(100px)'\n        },\n        // react-spring <Spring from={}> props value\n        animationTo: {\n          transform: 'translateY(0)'\n        },\n        //  react-spring <Spring to={}> props value\n        transition: {\n          mass: 1,\n          tension: 180,\n          friction: 26\n        }\n      },\n      component: LoginModal,\n      componentProps: {},\n      closeComponent: CloseModalButton,\n      closeOnClickOutside: false\n    });\n  }; // Toggle drawer\n\n\n  var toggleHandler = function toggleHandler() {\n    dispatch({\n      type: 'TOGGLE'\n    });\n  };\n\n  return __jsx(NavbarWrapper, _extends({}, navbarStyle, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }), __jsx(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, __jsx(Logo, {\n    href: \"#\",\n    logoSrc: \"/image/agency/logo.png\",\n    title: \"Agency\",\n    logoStyle: logoStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    variant: \"textButton\",\n    onClick: handleSearchModal,\n    icon: __jsx(\"i\", {\n      className: \"flaticon-magnifying-glass\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 19\n      }\n    }),\n    \"aria-label\": \"search\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }), __jsx(Button, {\n    variant: \"textButton\",\n    onClick: handleLoginModal,\n    icon: __jsx(\"i\", {\n      className: \"flaticon-user\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 19\n      }\n    }),\n    \"aria-label\": \"login\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }), __jsx(Drawer, {\n    width: \"420px\",\n    placement: \"right\",\n    drawerHandler: __jsx(HamburgMenu, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 28\n      }\n    }),\n    open: state.isOpen,\n    toggleHandler: toggleHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, __jsx(ScrollSpyMenu, {\n    menuItems: data.menuItems,\n    drawerClose: true,\n    offset: -100,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }), __jsx(CopyrightSection, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  })))));\n}; // Navbar style props\n\n\n_s(Navbar, \"QMdo+h1+fLbTriZQ0QN6uukzyow=\");\n\n_c3 = Navbar;\nNavbar.propTypes = {\n  navbarStyle: PropTypes.object,\n  logoStyle: PropTypes.object\n};\nNavbar.defaultProps = {\n  // Default navbar style\n  navbarStyle: {\n    minHeight: '70px'\n  },\n  // Default logo size\n  logoStyle: {\n    width: '128px',\n    height: 'auto'\n  }\n};\nexport default Navbar;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"CloseModalButton\");\n$RefreshReg$(_c2, \"CloseModalButtonAlt\");\n$RefreshReg$(_c3, \"Navbar\");","map":{"version":3,"sources":["/Users/mahad/Local Disk/untitled folder/helping-hands/containers/Agency/Navbar/index.js"],"names":["React","useContext","PropTypes","openModal","closeModal","NavbarWrapper","Drawer","Button","Logo","HamburgMenu","ScrollSpyMenu","Container","SearchPanel","LoginModal","CopyrightSection","DrawerContext","data","CloseModalButton","CloseModalButtonAlt","Navbar","navbarStyle","logoStyle","state","dispatch","handleSearchModal","config","className","disableDragging","width","height","animationFrom","transform","animationTo","transition","mass","tension","friction","component","componentProps","closeComponent","closeOnClickOutside","handleLoginModal","toggleHandler","type","display","alignItems","isOpen","menuItems","propTypes","object","defaultProps","minHeight"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { openModal, closeModal } from '@redq/reuse-modal';\nimport NavbarWrapper from '../../../common/src/components/Navbar';\nimport Drawer from '../../../common/src/components/Drawer';\nimport Button from '../../../common/src/components/Button';\nimport Logo from '../../../common/src/components/UIElements/Logo';\nimport HamburgMenu from '../../../common/src/components/HamburgMenu';\nimport ScrollSpyMenu from '../../../common/src/components/ScrollSpyMenu';\nimport { Container } from './navbar.style';\nimport SearchPanel from '../SearchPanel';\nimport LoginModal from '../LoginModal';\nimport CopyrightSection from '../CopyrightsSection';\n\n// import LogoImage from '../../../common/src/assets/image/agency/logo.png';\n\nimport { DrawerContext } from '../../../common/src/contexts/DrawerContext';\n\nimport data from '../../../common/src/data/Agency/';\n\n// Default close button for modal\nconst CloseModalButton = () => (\n  <Button\n    className=\"modalCloseBtn\"\n    variant=\"fab\"\n    onClick={() => closeModal()}\n    icon={<i className=\"flaticon-plus-symbol\" />}\n  />\n);\n\n// Alt close button for modal\nconst CloseModalButtonAlt = () => (\n  <Button\n    className=\"modalCloseBtn alt\"\n    variant=\"fab\"\n    onClick={() => closeModal()}\n    icon={<i className=\"flaticon-plus-symbol\" />}\n  />\n);\n\nconst Navbar = ({ navbarStyle, logoStyle }) => {\n  const { state, dispatch } = useContext(DrawerContext);\n\n  // Search modal handler\n  const handleSearchModal = () => {\n    openModal({\n      config: {\n        className: 'search-modal',\n        disableDragging: true,\n        width: '100%',\n        height: '100%',\n        animationFrom: { transform: 'translateY(100px)' }, // react-spring <Spring from={}> props value\n        animationTo: { transform: 'translateY(0)' }, //  react-spring <Spring to={}> props value\n        transition: {\n          mass: 1,\n          tension: 180,\n          friction: 26,\n        },\n      },\n      component: SearchPanel,\n      componentProps: {},\n      closeComponent: CloseModalButtonAlt,\n      closeOnClickOutside: false,\n    });\n  };\n\n  // Authentication modal handler\n  const handleLoginModal = () => {\n    openModal({\n      config: {\n        className: 'login-modal',\n        disableDragging: true,\n        width: '100%',\n        height: '100%',\n        animationFrom: { transform: 'translateY(100px)' }, // react-spring <Spring from={}> props value\n        animationTo: { transform: 'translateY(0)' }, //  react-spring <Spring to={}> props value\n        transition: {\n          mass: 1,\n          tension: 180,\n          friction: 26,\n        },\n      },\n      component: LoginModal,\n      componentProps: {},\n      closeComponent: CloseModalButton,\n      closeOnClickOutside: false,\n    });\n  };\n\n  // Toggle drawer\n  const toggleHandler = () => {\n    dispatch({\n      type: 'TOGGLE',\n    });\n  };\n\n  return (\n    <NavbarWrapper {...navbarStyle}>\n      <Container>\n        <Logo\n          href=\"#\"\n          logoSrc=\"/image/agency/logo.png\"\n          title=\"Agency\"\n          logoStyle={logoStyle}\n        />\n        <div style={{ display: 'flex', alignItems: 'center' }}>\n          <Button\n            variant=\"textButton\"\n            onClick={handleSearchModal}\n            icon={<i className=\"flaticon-magnifying-glass\" />}\n            aria-label=\"search\"\n          />\n          <Button\n            variant=\"textButton\"\n            onClick={handleLoginModal}\n            icon={<i className=\"flaticon-user\" />}\n            aria-label=\"login\"\n          />\n          <Drawer\n            width=\"420px\"\n            placement=\"right\"\n            drawerHandler={<HamburgMenu />}\n            open={state.isOpen}\n            toggleHandler={toggleHandler}\n          >\n            <ScrollSpyMenu\n              menuItems={data.menuItems}\n              drawerClose={true}\n              offset={-100}\n            />\n            <CopyrightSection />\n          </Drawer>\n        </div>\n      </Container>\n    </NavbarWrapper>\n  );\n};\n\n// Navbar style props\nNavbar.propTypes = {\n  navbarStyle: PropTypes.object,\n  logoStyle: PropTypes.object,\n};\n\nNavbar.defaultProps = {\n  // Default navbar style\n  navbarStyle: {\n    minHeight: '70px',\n  },\n  // Default logo size\n  logoStyle: {\n    width: '128px',\n    height: 'auto',\n  },\n};\n\nexport default Navbar;\n"]},"metadata":{},"sourceType":"module"}