{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatchUser, useData } from \"./userData.js\";\nimport cookie from \"js-cookie\";\nimport { useQuery, useMutation, useLazyQuery } from \"@apollo/react-hooks\";\nimport { INITIALIZATION_QUERY, DONOR_INFO, ORGANIZATION_INFO } from \"./queries\";\nimport { useRouter } from \"next/router\";\nexport default function CookieChecker(props) {\n  var user = useData();\n  var dispatch = useDispatchUser();\n  var token = cookie.get(\"token\");\n  var router = useRouter();\n\n  var _useState = useState(false),\n      loggedIn = _useState[0],\n      setLoginIn = _useState[1];\n\n  var _useLazyQuery = useLazyQuery(INITIALIZATION_QUERY, {\n    fetchPolicy: \"no-cache\"\n  }),\n      _useLazyQuery2 = _slicedToArray(_useLazyQuery, 2),\n      getData = _useLazyQuery2[0],\n      data = _useLazyQuery2[1].data;\n\n  var _useLazyQuery3 = useLazyQuery(DONOR_INFO, {\n    fetchPolicy: \"no-cache\"\n  }),\n      _useLazyQuery4 = _slicedToArray(_useLazyQuery3, 2),\n      getDonor = _useLazyQuery4[0],\n      donorInfo = _useLazyQuery4[1].data;\n\n  var _useLazyQuery5 = useLazyQuery(ORGANIZATION_INFO, {\n    fetchPolicy: \"no-cache\"\n  }),\n      _useLazyQuery6 = _slicedToArray(_useLazyQuery5, 2),\n      getOrganization = _useLazyQuery6[0],\n      organizationInfo = _useLazyQuery6[1].data;\n\n  useEffect(function () {\n    console.log(\"called\");\n\n    if (user[\"id\"] && token && data) {\n      setLoginIn(true);\n      console.log(\"im hereeeeeee\"); // if (data.me.role.name == \"Donor\") {\n      //   router.push(\"/account\");\n      // }\n      // if (data.me.role.name == \"Organization\") {\n      //   router.push(\"/account_o\");\n      // }\n    }\n\n    if (token && !data) {\n      console.log(\"im here\");\n      getData();\n    }\n\n    if (data && (!donorInfo || !organizationInfo) && !user[\"id\"]) {\n      console.log(\"say hello\");\n      console.log(data, \"data\"); // console.log(data.me.id);\n\n      if (data.me.role.name == \"Donor\") {\n        getDonor({\n          variables: {\n            fields: {\n              user: data.me.id\n            }\n          }\n        });\n      }\n\n      if (data.me.role.name == \"Organization\") {\n        getOrganization({\n          variables: {\n            fields: {\n              user: data.me.id\n            }\n          }\n        });\n      }\n    }\n\n    if (!user[\"id\"] && !token) {\n      setLoginIn(false); // router.push(\"/login\");\n    }\n\n    if (donorInfo && !user[\"id\"]) {\n      console.log(donorInfo); //   if (donorInfo[\"donors\"]) {\n      //     if (!donorInfo.donors.length) {\n      //       router.push(\"/login\");\n      //     } else {\n\n      dispatch({\n        type: \"LOGIN\",\n        payload: donorInfo.donors[0]\n      }); //router.push(\"/account\");\n      //     }\n      //   } else {\n      //     router.push(\"/login\");\n      //   }\n      // router.push(\"/\");\n    }\n\n    if (organizationInfo && !user[\"id\"]) {\n      console.log(organizationInfo); //   if (organizationInfo[\"organizations\"]) {\n      //     if (!organizationInfo.organizations.length) {\n      //       router.push(\"/login\");\n      //     } else {\n      //       console.log(organizationInfo);\n\n      dispatch({\n        type: \"LOGIN\",\n        payload: organizationInfo.organizations[0]\n      }); //router.push(\"/account_o\");\n      //     }\n      //   } else {\n      //     router.push(\"/login\");\n      //   }\n      // router.push(\"/\");\n    }\n  }, [user, data, donorInfo, organizationInfo, token]);\n  return __jsx(\"div\", null, props.childeren);\n}","map":null,"metadata":{},"sourceType":"module"}