{"ast":null,"code":"var _jsxFileName = \"/Users/mahad/Local Disk/untitled folder/helping-hands/common/src/components/Loader/index.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport LoaderStyle from './loader.style';\n\nconst Loader = _ref => {\n  let {\n    loaderColor,\n    className\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"loaderColor\", \"className\"]); // Add all classs to an array\n\n\n  const addAllClasses = ['reusecore__loader']; // className prop checking\n\n  if (className) {\n    addAllClasses.push(className);\n  }\n\n  return __jsx(LoaderStyle, _extends({\n    className: addAllClasses.join(' '),\n    loaderColor: loaderColor\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }));\n};\n\nLoader.propTypes = {\n  /** ClassName of the Loader */\n  className: PropTypes.string,\n\n  /** Set loader width in number || string */\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /** Set loader height in number || string */\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /** Set color for loader */\n  loaderColor: PropTypes.string\n};\nLoader.defaultProps = {};\nexport default Loader;","map":{"version":3,"sources":["/Users/mahad/Local Disk/untitled folder/helping-hands/common/src/components/Loader/index.js"],"names":["Loader","className","props","addAllClasses","loaderColor","PropTypes","width","height","string"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,SAAA,MAAA,YAAA;AACA,OAAA,WAAA,MAAA,gBAAA;;AAEA,MAAMA,MAAM,GAAG,IAAA,IAA0C;AAAA,MAAzC;AAAA,IAAA,WAAA;AAAeC,IAAAA;AAAf,MAAyC,IAAA;AAAA,MAAZC,KAAY,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,aAAA,EAAA,WAAA,CAAA,CAAA,CAAA,CACvD;;;AACA,QAAMC,aAAa,GAAG,CAFiC,mBAEjC,CAAtB,CAFuD,CAIvD;;AACA,MAAA,SAAA,EAAe;AACbA,IAAAA,aAAa,CAAbA,IAAAA,CAAAA,SAAAA;AACD;;AACD,SACE,KAAA,CAAA,WAAA,EAAA,QAAA,CAAA;AACE,IAAA,SAAS,EAAEA,aAAa,CAAbA,IAAAA,CADb,GACaA,CADb;AAEE,IAAA,WAAW,EAAEC;AAFf,GAAA,EAAA,KAAA,EAAA;AAAA,IAAA,MAAA,EAAA,IAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,CAAA,CADF;AARF,CAAA;;AAiBAJ,MAAM,CAANA,SAAAA,GAAmB;AACjB;AACAC,EAAAA,SAAS,EAAEI,SAAS,CAFH,MAAA;;AAIjB;AACAC,EAAAA,KAAK,EAAED,SAAS,CAATA,SAAAA,CAAoB,CAACA,SAAS,CAAV,MAAA,EAAmBA,SAAS,CALtC,MAKU,CAApBA,CALU;;AAOjB;AACAE,EAAAA,MAAM,EAAEF,SAAS,CAATA,SAAAA,CAAoB,CAACA,SAAS,CAAV,MAAA,EAAmBA,SAAS,CARvC,MAQW,CAApBA,CARS;;AAUjB;AACAD,EAAAA,WAAW,EAAEC,SAAS,CAACG;AAXN,CAAnBR;AAcAA,MAAM,CAANA,YAAAA,GAAAA,EAAAA;AAEA,eAAA,MAAA","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport LoaderStyle from './loader.style';\n\nconst Loader = ({ loaderColor, className, ...props }) => {\n  // Add all classs to an array\n  const addAllClasses = ['reusecore__loader'];\n\n  // className prop checking\n  if (className) {\n    addAllClasses.push(className);\n  }\n  return (\n    <LoaderStyle\n      className={addAllClasses.join(' ')}\n      loaderColor={loaderColor}\n      {...props}\n    />\n  );\n};\n\nLoader.propTypes = {\n  /** ClassName of the Loader */\n  className: PropTypes.string,\n\n  /** Set loader width in number || string */\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /** Set loader height in number || string */\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /** Set color for loader */\n  loaderColor: PropTypes.string,\n};\n\nLoader.defaultProps = {};\n\nexport default Loader;\n"]},"metadata":{},"sourceType":"module"}