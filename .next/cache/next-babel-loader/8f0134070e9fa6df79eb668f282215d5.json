{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/mahad/Local Disk/untitled folder/helping-hands/pages/_app.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// import React, { Fragment } from \"react\";\n// import { Modal } from \"@redq/reuse-modal\";\n// import \"@redq/reuse-modal/es/index.css\";\n// export default ({ Component, pageProps }) => {\n//   return (\n//     <Fragment>\n//       <Modal />\n//       <Component {...pageProps} />\n//     </Fragment>\n//   );\n// };\nimport React from \"react\";\nimport App from \"next/app\";\nimport Head from \"next/head\";\nimport { Modal } from \"@redq/reuse-modal\";\nimport { createMuiTheme, ThemeProvider, StylesProvider, responsiveFontSizes } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport withApollo from \"next-with-apollo\"; // import ApolloClient, { InMemoryCache } from 'apollo-boost';\n\nimport { ApolloClient, createHttpLink, InMemoryCache } from \"@apollo/client\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport { getDataFromTree } from \"@apollo/react-ssr\";\nimport { setContext } from \"apollo-link-context\";\nimport { ApolloLink } from \"apollo-link\";\nimport { HttpLink } from \"apollo-link-http\";\nimport { RestLink } from \"apollo-link-rest\";\nimport Nodefetch from \"node-fetch\";\nimport theme from \"../theme\";\nimport getToken from \"../lib/getToken\";\nimport { UserProvider } from \"../lib/userData\";\nglobal.Headers = Nodefetch.Headers;\nvar restLink = new RestLink({\n  uri: process.env.PLAIN_URL,\n  credentials: \"same-origin\"\n});\nvar httpLink = new HttpLink({\n  uri: process.env.SERVER_URL,\n  credentials: \"same-origin\"\n});\nvar authLink = setContext(function (_, _ref) {\n  var headers = _ref.headers;\n  var token = getToken();\n  return {\n    headers: _objectSpread(_objectSpread({}, headers), {}, {\n      accept: \"application/json\",\n      authorization: token ? \"Bearer \".concat(token) : \"\"\n    })\n  };\n});\n\nvar MyApp = /*#__PURE__*/function (_App) {\n  _inherits(MyApp, _App);\n\n  var _super = _createSuper(MyApp);\n\n  function MyApp() {\n    _classCallCheck(this, MyApp);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(MyApp, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // Remove the server-side injected CSS.\n      var jssStyles = document.querySelector(\"#jss-server-side\");\n\n      if (jssStyles) {\n        jssStyles.parentElement.removeChild(jssStyles);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps,\n          apollo = _this$props.apollo,\n          router = _this$props.router;\n      return __jsx(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 7\n        }\n      }, __jsx(ThemeProvider, {\n        theme: theme,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }\n      }, __jsx(CssBaseline, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }\n      }), __jsx(ApolloProvider, {\n        client: apollo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }\n      }, __jsx(UserProvider, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }\n      }, __jsx(Modal, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }\n      }), __jsx(Component, _extends({}, pageProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }\n      }))))));\n    }\n  }]);\n\n  return MyApp;\n}(App);\n\nexport default withApollo(function (_ref2) {\n  var initialState = _ref2.initialState;\n  return new ApolloClient({\n    link: ApolloLink.from([restLink, authLink, httpLink]),\n    cache: new InMemoryCache().restore(initialState || {})\n  });\n}, {\n  getDataFromTree: getDataFromTree\n})(MyApp);","map":{"version":3,"sources":["/Users/mahad/Local Disk/untitled folder/helping-hands/pages/_app.js"],"names":["React","App","Head","Modal","createMuiTheme","ThemeProvider","StylesProvider","responsiveFontSizes","CssBaseline","withApollo","ApolloClient","createHttpLink","InMemoryCache","ApolloProvider","getDataFromTree","setContext","ApolloLink","HttpLink","RestLink","Nodefetch","theme","getToken","UserProvider","global","Headers","restLink","uri","process","env","PLAIN_URL","credentials","httpLink","SERVER_URL","authLink","_","headers","token","accept","authorization","MyApp","jssStyles","document","querySelector","parentElement","removeChild","props","Component","pageProps","apollo","router","initialState","link","from","cache","restore"],"mappings":"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","sourcesContent":["// import React, { Fragment } from \"react\";\n// import { Modal } from \"@redq/reuse-modal\";\n// import \"@redq/reuse-modal/es/index.css\";\n\n// export default ({ Component, pageProps }) => {\n//   return (\n//     <Fragment>\n//       <Modal />\n//       <Component {...pageProps} />\n//     </Fragment>\n//   );\n// };\n\nimport React from \"react\";\nimport App from \"next/app\";\nimport Head from \"next/head\";\nimport { Modal } from \"@redq/reuse-modal\";\nimport {\n  createMuiTheme,\n  ThemeProvider,\n  StylesProvider,\n  responsiveFontSizes,\n} from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport withApollo from \"next-with-apollo\";\n// import ApolloClient, { InMemoryCache } from 'apollo-boost';\nimport { ApolloClient, createHttpLink, InMemoryCache } from \"@apollo/client\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport { getDataFromTree } from \"@apollo/react-ssr\";\nimport { setContext } from \"apollo-link-context\";\nimport { ApolloLink } from \"apollo-link\";\nimport { HttpLink } from \"apollo-link-http\";\nimport { RestLink } from \"apollo-link-rest\";\nimport Nodefetch from \"node-fetch\";\nimport theme from \"../theme\";\nimport getToken from \"../lib/getToken\";\nimport { UserProvider } from \"../lib/userData\";\n\nglobal.Headers = Nodefetch.Headers;\n\nconst restLink = new RestLink({\n  uri: process.env.PLAIN_URL,\n  credentials: \"same-origin\",\n});\n\nconst httpLink = new HttpLink({\n  uri: process.env.SERVER_URL,\n  credentials: \"same-origin\",\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = getToken();\n  return {\n    headers: {\n      ...headers,\n      accept: \"application/json\",\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nclass MyApp extends App {\n  componentDidMount() {\n    // Remove the server-side injected CSS.\n    const jssStyles = document.querySelector(\"#jss-server-side\");\n    if (jssStyles) {\n      jssStyles.parentElement.removeChild(jssStyles);\n    }\n  }\n\n  render() {\n    const { Component, pageProps, apollo, router } = this.props;\n\n    return (\n      <React.Fragment>\n        {/* <Head>\n          <title>Trilla App</title>\n          <meta name=\"viewport\" content=\"minimum-scale=1, initial-scale=1, width=device-width\" />\n        </Head> */}\n\n        <ThemeProvider theme={theme}>\n          {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n          <CssBaseline />\n          <ApolloProvider client={apollo}>\n            <UserProvider>\n              <Modal />\n              <Component {...pageProps} />\n            </UserProvider>\n          </ApolloProvider>\n        </ThemeProvider>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withApollo(\n  ({ initialState }) =>\n    new ApolloClient({\n      link: ApolloLink.from([restLink, authLink, httpLink]),\n      cache: new InMemoryCache().restore(initialState || {}),\n    }),\n  { getDataFromTree }\n)(MyApp);\n"]},"metadata":{},"sourceType":"module"}