{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport react, { useEffect, useState } from \"react\";\nimport { Box, Container, Typography, Grid, Paper, Divider } from \"@material-ui/core\";\nimport Head from \"next/head\";\nimport Navbar from \"../../containers/Charity/Navbar\";\nimport ProjectUpdates from \"../../common/src/components/HelpingHands/UpdateStepper\";\nimport LinearSlider from \"../../common/src/components/HelpingHands/LinearSlider\";\nimport ReviewList from \"../../common/src/components/HelpingHands/ReviewCard\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport DonorList from \"../../common/src/components/HelpingHands/DonorList\";\nimport UpdateSlider from \"../../common/src/components/HelpingHands/UpdateSlider\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport EventIcon from \"@material-ui/icons/Event\";\nimport LabelIcon from \"@material-ui/icons/Label\";\nimport Button from \"../../common/src/components/Button\";\nimport { ThemeProvider } from \"styled-components\";\nimport Footer from \"../../containers/Charity/Footer\";\nimport { charityTheme } from \"../../common/src/theme/charity\";\nimport { ResetCSS } from \"../../common/src/assets/css/style\";\nimport Sticky from \"react-stickynode\";\nimport { GlobalStyle, CharityWrapper, ContentWrapper } from \"../../containers/Charity/charity.style\";\nimport Heading from \"../../common/src/components/Heading\";\nimport Link from \"next/link\";\nimport SectionWrapper, { SectionHeader, ContentArea, ImageWrapper, TextWrapper, TextAndLink, DonationProgressbar, BarArea, CurrentStatus, ShareArea, DonateButton, ShareList, Item } from \"../../containers/Charity/FundraiserSection/fundraiserSection.style\";\nimport { Icon } from \"react-icons-kit\";\nimport { twitter } from \"react-icons-kit/fa/twitter\";\nimport { facebookSquare } from \"react-icons-kit/fa/facebookSquare\";\nimport Text from \"../../common/src/components/Text\";\nimport DrawerSection from \"../../containers/Charity/DrawerSection\";\nimport { DrawerProvider } from \"../../common/src/contexts/DrawerContext\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { useRouter } from \"next/router\";\nimport { useData, useDispatchUser } from \"../../lib/userData\";\nimport { GET_PROJECT } from \"../../lib/queries\";\nimport { CREATE_DONATION, UPDATE_DONOR } from \"../../lib/mutations\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport Error from \"../../containers/Error\";\nimport moment from \"moment\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport ShareModal from \"../../common/src/components/shareModal\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport _ from \"lodash\";\nimport FsLightbox from \"fslightbox-react\";\n\nfunction Project(_ref) {\n  var projectID = _ref.projectID;\n  var router = useRouter();\n\n  var _useState = useState(false),\n      openShare = _useState[0],\n      setOpenShare = _useState[1];\n\n  var _useState2 = useState(false),\n      donations = _useState2[0],\n      setDonations = _useState2[1];\n\n  var _useState3 = useState(false),\n      donationLoading = _useState3[0],\n      setDonationLoading = _useState3[1];\n\n  var _useState4 = useState(\"\"),\n      donationError = _useState4[0],\n      setDonationError = _useState4[1];\n\n  var dispatch = useDispatchUser();\n  var donor = useData();\n\n  var _useState5 = useState(false),\n      updated = _useState5[0],\n      setUpdated = _useState5[1];\n\n  var _useState6 = useState(false),\n      toggler = _useState6[0],\n      setToggler = _useState6[1];\n\n  var _useState7 = useState(false),\n      coverToggler = _useState7[0],\n      setCoverToggler = _useState7[1];\n\n  var _useState8 = useState(0),\n      imageSlide = _useState8[0],\n      setImageSlider = _useState8[1];\n\n  var _useQuery = useQuery(GET_PROJECT, {\n    variables: {\n      id: projectID\n    },\n    skip: !projectID\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      refetch = _useQuery.refetch;\n\n  var _useMutation = useMutation(UPDATE_DONOR, {\n    onCompleted: function onCompleted(data) {\n      console.log(data);\n      dispatch({\n        type: \"UPDATE\",\n        payload: data.updateDonor.donor\n      });\n      setUpdated(true);\n    },\n    onError: function onError(error) {\n      console.log(error);\n    }\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      updateDonor = _useMutation2[0];\n\n  useEffect(function () {\n    console.log(data);\n\n    if (data && donor[\"id\"] && !updated) {\n      if (donor.user.role.name == \"Donor\") {\n        updateDonor({\n          variables: {\n            fields: {\n              data: {\n                visitedTags: _.uniq([].concat(_toConsumableArray(donor.visitedTags.map(function (tag) {\n                  return tag.id;\n                })), _toConsumableArray(data.project.tags.map(function (tag) {\n                  return tag.id;\n                }))))\n              },\n              where: {\n                id: donor.id\n              }\n            }\n          }\n        });\n      }\n    }\n  }, [data, updated]);\n\n  var _useMutation3 = useMutation(CREATE_DONATION, {\n    onCompleted: function onCompleted(data) {\n      console.log(data);\n      setDonations(false);\n      refetch();\n      dispatch({\n        type: \"UPDATE\",\n        payload: _objectSpread(_objectSpread({}, donor), {}, {\n          creditAmount: donor.creditAmount - data.createDonation.donation.amount\n        })\n      });\n      setDonationError(\"Review Added succesfully!\");\n      setDonationLoading(false);\n      handleReset();\n    },\n    onError: function onError(error) {\n      console.log(error);\n      setDonationError(\"Sorry an error occurred. Please try again!\");\n    }\n  }),\n      _useMutation4 = _slicedToArray(_useMutation3, 1),\n      createDonation = _useMutation4[0];\n\n  var _useFormik = useFormik({\n    initialValues: {\n      donation: 10\n    },\n    onSubmit: function onSubmit(values) {\n      console.log(\"Review On Submit\");\n      console.log(values);\n      setDonationLoading(true);\n      setDonationError(null);\n\n      if (donor.creditAmount >= values.donation) {\n        createDonation({\n          variables: {\n            field: {\n              data: {\n                donor: donor.id,\n                project: projectID,\n                amount: values.donation\n              }\n            }\n          }\n        });\n      } else {\n        setDonationError(\"Please add more credits in your wallet first\");\n        setDonationLoading(false);\n      }\n    },\n    validationSchema: Yup.object().shape({\n      donation: Yup.number().min(10, \"Minimumum donation size is 10 rupees\").required(\"Please enter donation amount\")\n    })\n  }),\n      handleBlur = _useFormik.handleBlur,\n      handleChange = _useFormik.handleChange,\n      handleSubmit = _useFormik.handleSubmit,\n      handleReset = _useFormik.handleReset,\n      values = _useFormik.values,\n      touched = _useFormik.touched,\n      errors = _useFormik.errors,\n      setFieldValue = _useFormik.setFieldValue;\n\n  var handleDonation = function handleDonation() {\n    if (donor[\"id\"]) {\n      setDonations(true);\n    } else router.push(\"/signin\");\n  };\n\n  if (error) {\n    return __jsx(Error, {\n      statusCode: 404\n    });\n  }\n\n  if (!error && !loading && !data) {\n    return __jsx(Error, {\n      statusCode: 404\n    });\n  }\n\n  if (loading && !data) {\n    return __jsx(Container, {\n      maxWidth: \"xl\",\n      style: {\n        minHeight: \"100vh\",\n        background: \"#F2F2F2\",\n        textAlign: \"center\",\n        paddingTop: \"30%\"\n      }\n    }, __jsx(CircularProgress, {\n      color: \"secondary\"\n    }));\n  } // if (data && !loading) {\n\n\n  return __jsx(ThemeProvider, {\n    theme: charityTheme\n  }, __jsx(Head, null, __jsx(\"title\", null, data.project.name), __jsx(\"meta\", {\n    name: \"Description\",\n    content: \"React next landing page\"\n  }), __jsx(\"meta\", {\n    name: \"theme-color\",\n    content: \"#FCF22B\"\n  }), __jsx(\"meta\", {\n    name: \"viewport\",\n    content: \"width=device-width, initial-scale=1.0\"\n  }), __jsx(\"link\", {\n    href: \"https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700,800&display=swap\",\n    rel: \"stylesheet\"\n  })), __jsx(ResetCSS, null), __jsx(GlobalStyle, null), __jsx(CharityWrapper, null, __jsx(Sticky, {\n    top: 0,\n    innerZ: 9999,\n    activeClass: \"sticky-nav-active\"\n  }, __jsx(Navbar, null)), __jsx(DrawerProvider, null, __jsx(DrawerSection, null)), __jsx(ContentWrapper, null, __jsx(Container, {\n    style: {\n      maxWidth: \"1170px\",\n      minHeight: \"100vh\",\n      paddingTop: \"140px\"\n    }\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 2\n  }, __jsx(Grid, {\n    item: true,\n    md: 12\n  }, __jsx(Heading, {\n    as: \"h1\",\n    content: data.project.name\n  })), __jsx(Grid, {\n    container: true,\n    item: true,\n    md: 8,\n    spacing: 1\n  }, __jsx(Grid, {\n    item: true,\n    md: 12\n  }, __jsx(\"img\", {\n    src: \"\".concat(process.env.PLAIN_URL).concat(data.project.titleImage.url),\n    onClick: function onClick() {\n      setToggler(!toggler);\n      setImageSlider(data.project.relatedImages.length ? data.project.relatedImages.length + 1 : 1);\n    },\n    height: \"400px\",\n    width: \"100%\",\n    style: {\n      borderRadius: 4,\n      cursor: \"pointer\"\n    }\n  })), data.project.relatedImages.length ? __jsx(Grid, {\n    item: true,\n    container: true,\n    md: 12,\n    spacing: 2,\n    style: {\n      paddingRight: 0,\n      margin: 0\n    }\n  }, data.project.relatedImages.map(function (item, index) {\n    return __jsx(Grid, {\n      item: true,\n      md: 2,\n      key: item.id\n    }, __jsx(\"img\", {\n      src: \"\".concat(process.env.PLAIN_URL).concat(item.url),\n      onClick: function onClick() {\n        setToggler(!toggler);\n        setImageSlider(index + 1);\n      },\n      style: {\n        cursor: \"pointer\",\n        height: \"100px\",\n        borderRadius: 4,\n        objectFit: \"cover\",\n        width: \"100%\"\n      },\n      loading: \"lazy\"\n    }));\n  })) : null, __jsx(FsLightbox, {\n    toggler: toggler,\n    type: \"image\",\n    sources: data ? data.project.relatedImages.map(function (pic) {\n      return \"\".concat(process.env.PLAIN_URL).concat(pic.url);\n    }).concat(\"\".concat(process.env.PLAIN_URL).concat(data.project.titleImage.url)) : [],\n    slide: imageSlide\n  }), __jsx(Grid, {\n    container: true,\n    item: true,\n    md: 12,\n    spacing: 1,\n    alignItems: \"center\",\n    style: {\n      paddingTop: \"16px\"\n    }\n  }, __jsx(Grid, {\n    item: true,\n    md: 1\n  }, __jsx(Avatar, {\n    src: \"\".concat(process.env.PLAIN_URL).concat(data.project.organization.profilePicture.url)\n  })), __jsx(Grid, {\n    item: true,\n    md: 11\n  }, __jsx(\"a\", {\n    href: \"http://localhost:3000/Organizations/\".concat(data.project.organization.id)\n  }, __jsx(Heading, {\n    content: \"\".concat(data.project.organization.organizationName, \" is organizing this fundraiser\"),\n    style: {\n      margin: \"0px\"\n    },\n    as: \"h3\"\n  }))), __jsx(Grid, {\n    item: true,\n    md: 12\n  }, __jsx(Divider, null)), __jsx(Grid, {\n    container: true,\n    item: true,\n    md: 6,\n    spacing: 1\n  }, __jsx(Grid, {\n    item: true\n  }, __jsx(EventIcon, null)), __jsx(Grid, {\n    item: true\n  }, __jsx(Text, {\n    color: \"#060F1E\",\n    content: \"Created \".concat(moment(data.project.createdAt).format(\"MMMM Do, YYYY\")),\n    style: {\n      margin: \"0px\"\n    }\n  }))), __jsx(Grid, {\n    container: true,\n    item: true,\n    md: 6,\n    spacing: 1\n  }, data.project.tags.map(function (tag) {\n    return __jsx(React.Fragment, null, __jsx(Grid, {\n      item: true\n    }, __jsx(LabelIcon, null)), __jsx(Grid, {\n      item: true\n    }, __jsx(Text, {\n      color: \"#060F1E\",\n      content: tag.name,\n      style: {\n        margin: \"0px\"\n      }\n    })));\n  }))), __jsx(Grid, {\n    item: true,\n    md: 12\n  }, __jsx(Paper, null, __jsx(Box, {\n    width: 1,\n    p: 2\n  }, __jsx(Heading, {\n    as: \"h3\",\n    content: \"Description\",\n    style: {\n      paddingBottom: \"10px\"\n    }\n  }), __jsx(Text, {\n    color: \"#060F1E\",\n    content: data.project.description\n  })))), __jsx(Grid, {\n    item: true,\n    md: 12\n  }, __jsx(Paper, null, __jsx(Box, {\n    width: 1,\n    p: 2\n  }, __jsx(Heading, {\n    as: \"h3\",\n    content: \"Project Updates:\",\n    style: {\n      margin: \"0px\"\n    }\n  }), __jsx(ProjectUpdates, {\n    project: data.project\n  }))))), __jsx(Grid, {\n    conatiner: true,\n    item: true,\n    md: 4\n  }, __jsx(Paper, null, __jsx(Box, {\n    p: 2\n  }, __jsx(DonationProgressbar, {\n    style: {\n      marginTop: \"10px\"\n    }\n  }, __jsx(BarArea, null, __jsx(CurrentStatus, null, __jsx(\"strong\", null, \"Rs. \".concat(data.project.totalDonations)), \" \", \"of \", data.project.targetAmount, \" goal\"), __jsx(Text, {\n    content: \"\"\n  })), __jsx(Heading, {\n    as: \"h5\",\n    content: \"Raised by \".concat(data.project.donations.length, \" people since \").concat(moment(data.project.createdAt).format(\"MMMM Do\"), \".\"),\n    style: {\n      fontSize: \"18px\"\n    }\n  })), __jsx(Button, {\n    title: \"DONATE NOW\",\n    variant: \"textButton\",\n    onClick: handleDonation,\n    style: {\n      marginTop: \"18px\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      minWidth: \"100%\",\n      height: \"auto\",\n      border: \"0\",\n      fontSize: \"15px\",\n      fontWeight: \"700\",\n      borderRadius: \"10px\",\n      cursor: \"pointer\",\n      color: \"#FFFFFF\",\n      backgroundColor: \"#05B890\",\n      position: \"relative\",\n      overflow: \"hidden\",\n      zIndex: \"1\"\n    }\n  }), donations ? __jsx(Dialog, {\n    open: donations,\n    onClose: function onClose() {\n      return setDonations(false);\n    },\n    \"aria-labelledby\": \"form-dialog-title\"\n  }, __jsx(DialogTitle, {\n    id: \"form-dialog-title\"\n  }, \"Donate Now\"), __jsx(DialogContent, null, __jsx(DialogContentText, null, \"Donate to your favourite project\"), __jsx(TextField, {\n    type: \"number\",\n    autoFocus: true,\n    name: \"donation\",\n    value: values.donation,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    error: errors.donation && touched.donation,\n    helperText: errors.donation && touched.donation ? errors.donation : null,\n    label: \"Donation\",\n    fullWidth: true\n  }), donationError ? __jsx(Text, {\n    content: donationError\n  }) : null), __jsx(DialogActions, null, __jsx(Button, {\n    onClick: function onClick() {\n      return setDonations(false);\n    },\n    title: \"Cancel\",\n    variant: \"extendedFab\"\n  }), __jsx(Button, {\n    title: \"Submit\",\n    variant: \"extendedFab\",\n    onClick: handleSubmit,\n    disabled: donationLoading,\n    isLoading: donationLoading\n  }))) : null, openShare ? __jsx(ShareModal, {\n    status: openShare,\n    modalClose: function modalClose() {\n      return setOpenShare(false);\n    },\n    url: \"http://localhost:3000/projects/\".concat(data.project.id),\n    heading: \"Share this project\"\n  }) : null, __jsx(Button, {\n    title: \"SHARE\",\n    variant: \"outlined\",\n    onClick: function onClick() {\n      return setOpenShare(true);\n    },\n    style: {\n      marginTop: \"5px\",\n      marginBottom: \"23px\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      minWidth: \"100%\",\n      height: \"auto\",\n      border: \"1\",\n      borderColor: \"#3E2672\",\n      fontSize: \"15px\",\n      fontWeight: \"700\",\n      borderRadius: \"10px\",\n      cursor: \"pointer\",\n      color: \"#060F1E\",\n      position: \"relative\",\n      overflow: \"hidden\",\n      zIndex: \"1\"\n    }\n  }), __jsx(Grid, {\n    container: true,\n    alignItems: \"center\",\n    spacing: 1\n  }, __jsx(Grid, {\n    item: true,\n    md: \"12\",\n    style: {\n      paddingTop: \"0px\"\n    }\n  }, __jsx(Divider, null)), __jsx(Grid, {\n    item: true,\n    md: 12\n  }, __jsx(DonorList, {\n    project: data.project\n  }))))), __jsx(Paper, null, __jsx(Box, {\n    p: 1,\n    m: 2\n  }, __jsx(Typography, {\n    variant: \"h6\"\n  }, \"Reviews\"), __jsx(ReviewList, {\n    project: data.project\n  }), __jsx(Grid, {\n    item: true,\n    md: 12,\n    align: \"center\"\n  }, __jsx(\"a\", {\n    href: \"/project\"\n  }))))))), __jsx(Footer, null)))); // }\n  // return (\n  //   <Container\n  //     maxWidth=\"xl\"\n  //     style={{\n  //       minHeight: \"100vh\",\n  //       background: \"#F2F2F2\",\n  //       textAlign: \"center\",\n  //       paddingTop: \"30%\",\n  //     }}\n  //   >\n  //     <h3>Data: {data.project.id}</h3>\n  //     <h3>Error: {error}</h3>\n  //     <h3>Loading: {loading}</h3>\n  //   </Container>\n  // );\n}\n\nProject.getInitialProps = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n    var query;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            query = _ref2.query;\n            console.log(query);\n\n            if (!query[\"project\"]) {\n              _context.next = 6;\n              break;\n            }\n\n            return _context.abrupt(\"return\", {\n              projectID: query.project\n            });\n\n          case 6:\n            return _context.abrupt(\"return\", {\n              projectID: \"\"\n            });\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport default Project;","map":null,"metadata":{},"sourceType":"module"}