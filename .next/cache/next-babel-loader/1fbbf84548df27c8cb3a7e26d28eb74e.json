{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Fragment } from \"react\";\nimport { useState } from \"react\";\nimport Text from \"../common/src/components/Text\";\nimport { useRouter } from \"next/router\";\nimport Head from \"next/head\";\nimport Sticky from \"react-stickynode\";\nimport { ThemeProvider } from \"styled-components\";\nimport { charityTheme } from \"../common/src/theme/charity\";\nimport { ResetCSS } from \"../common/src/assets/css/style\";\nimport { DrawerProvider } from \"../common/src/contexts/DrawerContext\";\nimport Navbar from \"../containers/Charity/Navbar\";\nimport DrawerSection from \"../containers/Charity/DrawerSection\";\nimport Footer from \"../containers/Charity/Footer\";\nimport { GlobalStyle, CharityWrapper, ContentWrapper } from \"../containers/Charity/charity.style\";\nimport { Container, Grid, Paper, Divider } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"../common/src/components/Button\";\nimport Heading from \"../common/src/components/Heading\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport { CREATE_DONOR, REGISTER } from \"../lib/mutations\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper\n  }\n}));\nexport default function signup() {\n  const router = useRouter();\n  const {\n    0: formValues,\n    1: setFormValues\n  } = useState(\"\");\n  const {\n    0: loginLoading,\n    1: setLoginLoading\n  } = useState(false);\n  const {\n    0: loginError,\n    1: setLoginError\n  } = useState(null);\n  const [registerUser] = useMutation(REGISTER, {\n    onCompleted: data => {\n      console.log(data);\n      router.push(\"/signin\");\n    },\n    onError: ({\n      graphQLErrors,\n      networkError\n    }) => {\n      console.log(\"Register Error\");\n      setLoginError(\"User already exists\");\n      setLoginLoading(false);\n    }\n  });\n  const [createDonor] = useMutation(CREATE_DONOR, {\n    onCompleted: data => {\n      console.log(data, \"donor\");\n      registerUser({\n        variables: {\n          fields: {\n            data: {\n              donor: data.createDonor.donor.id,\n              username: formValues.email.split(\"@\")[0],\n              email: formValues.email,\n              password: formValues.password,\n              confirmed: true,\n              isDonor: true\n            }\n          }\n        }\n      });\n    },\n    onError: ({\n      networkError,\n      graphQLErrors\n    }) => {\n      // console.log(networkError.result, graphQLErrors, \"Donor Signup\");\n      setLoginError(\"Sorry, an error occured, try again\");\n      setLoginLoading(false);\n    }\n  });\n  const schemas = [{\n    email: Yup.string().email(\"Email not valid\").required(\"Please Enter Your Email\"),\n    password: Yup.string().required(\"Please Enter Password\"),\n    fullName: Yup.string().required(\"Please Enter Full Name\"),\n    mobileNumber: Yup.string().required(\"Please Enter Your Mobile Number\"),\n    cnic: Yup.string().required(\"Please Enter Your CNIC Number\"),\n    confirmPassword: Yup.string().oneOf([Yup.ref(\"password\"), null], \"Passwords must match\").required(\"Pleaser confirm password\")\n  }];\n  const {\n    handleBlur,\n    handleChange,\n    handleSubmit,\n    handleReset,\n    values,\n    touched,\n    errors,\n    setFieldValue\n  } = useFormik({\n    initialValues: {\n      fullName: \"\",\n      email: \"\",\n      mobileNumber: \"\",\n      cnic: \"\",\n      password: \"\",\n      confirmPassword: \"\"\n    },\n    onSubmit: values => {\n      console.log(values);\n      setLoginLoading(true);\n      setLoginError(null);\n      setFormValues(values);\n      createDonor({\n        variables: {\n          fields: {\n            data: {\n              fullName: values.fullName,\n              cnic: values.cnic,\n              mobileNumber: values.mobileNumber\n            }\n          }\n        }\n      });\n    },\n    validationSchema: Yup.object().shape(schemas[0])\n  });\n\n  const handleFormData = (value, name) => {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      [name]: value\n    }));\n  };\n\n  const handleDonation = e => {\n    e.preventDefault();\n    console.log(\"Donation form data: \", state);\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      price: \"\"\n    }));\n  };\n\n  return __jsx(ThemeProvider, {\n    theme: charityTheme\n  }, __jsx(Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"Sign Up | Esaar\"), __jsx(\"meta\", {\n    name: \"Description\",\n    content: \"React next landing page\"\n  }), __jsx(\"meta\", {\n    name: \"theme-color\",\n    content: \"#FCF22B\"\n  }), __jsx(\"meta\", {\n    name: \"viewport\",\n    content: \"width=device-width, initial-scale=1.0\"\n  }), __jsx(\"link\", {\n    href: \"https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700,800&display=swap\",\n    rel: \"stylesheet\"\n  })), __jsx(ResetCSS, null), __jsx(GlobalStyle, null), __jsx(CharityWrapper, null, __jsx(Sticky, {\n    top: 0,\n    innerZ: 9999,\n    activeClass: \"sticky-nav-active\"\n  }, __jsx(Navbar, null)), __jsx(DrawerProvider, null, __jsx(DrawerSection, null)), __jsx(ContentWrapper, null, __jsx(Grid, {\n    container: true,\n    style: {\n      maxWidth: \"1170px\",\n      minHeight: \"100vh\",\n      paddingTop: \"140px\",\n      marginLeft: \"170px\"\n    }\n  }, __jsx(Grid, {\n    item: true,\n    md: 2\n  }), __jsx(Grid, {\n    item: true,\n    md: 8,\n    style: {\n      marginLeft: \"30px\"\n    }\n  }, __jsx(Paper, {\n    style: {\n      height: \"75vh\"\n    }\n  }, __jsx(Container, {\n    style: {\n      padding: \"40px\"\n    }\n  }, \" \", __jsx(Heading, {\n    content: \"Sign Up\",\n    color: \"#05B890\"\n  }), \" \", __jsx(Divider, null), __jsx(Grid, {\n    container: true\n  }, __jsx(Grid, {\n    item: true,\n    md: 5,\n    style: {\n      marginTop: \"30px\"\n    }\n  }, __jsx(Heading, {\n    content: \"Full Name\",\n    as: \"h4\",\n    style: {\n      marginTop: \"1rem\"\n    }\n  }), \" \", __jsx(TextField, {\n    name: \"fullName\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    error: errors.fullName && touched.fullName,\n    helperText: errors.fullName && touched.fullName ? errors.fullName : null,\n    label: \"\",\n    size: \"small\",\n    style: {\n      color: \"#3E2672\"\n    },\n    fullWidth: true\n  }), __jsx(Heading, {\n    content: \"Mobile Number\",\n    as: \"h4\",\n    style: {\n      marginTop: \"1rem\"\n    }\n  }), \" \", __jsx(TextField, {\n    name: \"mobileNumber\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    error: errors.mobileNumber && touched.mobileNumber,\n    helperText: errors.mobileNumber && touched.mobileNumber ? errors.mobileNumber : null,\n    label: \"\",\n    size: \"small\",\n    style: {\n      color: \"#05B890\"\n    },\n    fullWidth: true\n  }), __jsx(Heading, {\n    content: \"Password\",\n    as: \"h4\",\n    style: {\n      marginTop: \"1rem\"\n    }\n  }), \" \", __jsx(TextField, {\n    label: \"\",\n    name: \"password\",\n    onChange: handleChange,\n    type: \"password\",\n    value: values.password,\n    onBlur: handleBlur,\n    fullWidth: true,\n    error: errors.password && touched.password,\n    helperText: errors.password && touched.password ? errors.password : null\n  })), __jsx(Grid, {\n    item: true,\n    md: 1\n  }), __jsx(Grid, {\n    item: true,\n    md: 5,\n    style: {\n      marginTop: \"30px\"\n    }\n  }, __jsx(Heading, {\n    content: \"Email ID\",\n    as: \"h4\",\n    style: {\n      marginTop: \"1rem\"\n    }\n  }), \" \", __jsx(TextField, {\n    label: \"\",\n    type: \"email\",\n    name: \"email\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    error: errors.email && touched.email,\n    helperText: errors.email && touched.email ? errors.email : null,\n    size: \"small\",\n    style: {\n      color: \"#3E2672\"\n    },\n    fullWidth: true\n  }), __jsx(Heading, {\n    content: \"CNIC\",\n    as: \"h4\",\n    style: {\n      marginTop: \"1rem\"\n    }\n  }), \" \", __jsx(TextField, {\n    name: \"cnic\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    error: errors.cnic && touched.cnic,\n    helperText: errors.cnic && touched.cnic ? errors.cnic : null,\n    label: \"\",\n    size: \"small\",\n    style: {\n      color: \"#05B890\"\n    },\n    fullWidth: true\n  }), __jsx(Heading, {\n    content: \"Confirm Password\",\n    as: \"h4\",\n    style: {\n      marginTop: \"1rem\"\n    }\n  }), \" \", __jsx(TextField, {\n    label: \"\",\n    name: \"confirmPassword\",\n    onChange: handleChange,\n    type: \"password\",\n    value: values.confirmPassword,\n    onBlur: handleBlur,\n    fullWidth: true,\n    error: errors.confirmPassword && touched.confirmPassword,\n    helperText: errors.confirmPassword && touched.confirmPassword ? errors.confirmPassword : null\n  })), __jsx(Grid, {\n    container: true,\n    item: true,\n    md: 12,\n    style: {\n      alignContent: \"center\"\n    }\n  }, loginError ? __jsx(Text, {\n    content: loginError\n  }) : null), __jsx(Grid, {\n    container: true,\n    item: true,\n    md: 12,\n    style: {\n      alignContent: \"center\"\n    }\n  }, __jsx(Button, {\n    title: \"Create Account\",\n    variant: \"extendedFab\",\n    onClick: handleSubmit,\n    disabled: loginLoading,\n    isLoading: loginLoading,\n    style: {\n      marginTop: \"20px\",\n      marginLeft: \"230px\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      minWidth: \"200px\",\n      height: \"auto\"\n    }\n  })), __jsx(Grid, {\n    container: true,\n    item: true,\n    md: 12\n  }, __jsx(\"a\", {\n    href: \"/signup_o\"\n  }, \"Signup as organization?\")))))))), __jsx(Footer, null))));\n}","map":null,"metadata":{},"sourceType":"module"}