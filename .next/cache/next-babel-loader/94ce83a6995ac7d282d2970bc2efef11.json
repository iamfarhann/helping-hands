{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nvar __jsx = React.createElement;\nimport React, { Fragment, useEffect } from \"react\";\nimport { useState } from \"react\";\nimport Head from \"next/head\";\nimport Link from \"next/link\";\nimport Text from \"../common/src/components/Text\";\nimport Sticky from \"react-stickynode\";\nimport { ThemeProvider } from \"styled-components\";\nimport { charityTheme } from \"../common/src/theme/charity\";\nimport { ResetCSS } from \"../common/src/assets/css/style\";\nimport { DrawerProvider } from \"../common/src/contexts/DrawerContext\";\nimport Navbar from \"../containers/Charity/Navbar\";\nimport DrawerSection from \"../containers/Charity/DrawerSection\";\nimport Footer from \"../containers/Charity/Footer\";\nimport { GlobalStyle, CharityWrapper, ContentWrapper } from \"../containers/Charity/charity.style\";\nimport { Box, Container, Typography, Grid, Paper, Divider, Checkbox } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport CommentIcon from \"@material-ui/icons/Comment\";\nimport InboxIcon from \"@material-ui/icons/Inbox\";\nimport DraftsIcon from \"@material-ui/icons/Drafts\";\nimport Button from \"../common/src/components/Button\";\nimport Heading from \"../common/src/components/Heading\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport BusinessCenterIcon from \"@material-ui/icons/BusinessCenter\";\nimport AssessmentIcon from \"@material-ui/icons/Assessment\";\nimport PowerSettingsNewIcon from \"@material-ui/icons/PowerSettingsNew\";\nimport TextField from \"@material-ui/core/TextField\";\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\nimport PasswordField from \"material-ui-password-field\";\nimport InputGroup from \"../common/src/components/InputGroup\";\nimport RadioGroup from \"../common/src/components/RadioGroup\";\nimport SectionWrapper, { ContentArea, ButtonGroup, DonationForm, DonateButton } from \"../containers/Charity/donateSection/donateSection.style\";\nimport { addCredits, currencyOptions } from \"../common/src/data/Charity\";\nimport cookie from \"js-cookie\";\nimport { useRouter } from \"next/router\";\nimport { useData, useDispatchUser } from \"../lib/userData\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { useQuery, useMutation, useLazyQuery } from \"@apollo/react-hooks\";\nimport { UPDATE_DONOR } from \"../lib/mutations\";\nimport { GET_PROJECTS, GET_TAG_NAMES } from \"../lib/queries\";\nimport { DropzoneArea } from \"material-ui-dropzone\";\nimport axios from \"axios\";\nimport TagSelection from \"../containers/Charity/Tags/tagSelection\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport ProjectCard from \"../containers/Charity/Project\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport _ from \"lodash\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      width: \"100%\",\n      maxWidth: 360,\n      backgroundColor: theme.palette.background.paper\n    }\n  };\n});\nexport default (function () {\n  var classes = useStyles();\n  var donor = useData();\n\n  var _useState = useState([]),\n      selectedTag = _useState[0],\n      setSelectedTag = _useState[1];\n\n  var _useState2 = useState(true),\n      fetched = _useState2[0],\n      setFetch = _useState2[1];\n\n  var _useQuery = useQuery(GET_TAG_NAMES),\n      allTags = _useQuery.data,\n      tagLoading = _useQuery.loading,\n      tagError = _useQuery.error,\n      tagRefetch = _useQuery.refetch;\n\n  var handleToggle = function handleToggle(value) {\n    return function () {\n      var currentIndex = checked.indexOf(value);\n\n      var newChecked = _toConsumableArray(checked);\n\n      if (currentIndex === -1) {\n        newChecked.push(value);\n      } else {\n        newChecked.splice(currentIndex, 1);\n      }\n\n      setChecked(newChecked);\n    };\n  };\n\n  var _useLazyQuery = useLazyQuery(GET_PROJECTS),\n      _useLazyQuery2 = _slicedToArray(_useLazyQuery, 2),\n      getProjects = _useLazyQuery2[0],\n      _useLazyQuery2$ = _useLazyQuery2[1],\n      data = _useLazyQuery2$.data,\n      loading = _useLazyQuery2$.loading,\n      error = _useLazyQuery2$.error,\n      refetch = _useLazyQuery2$.refetch;\n\n  useEffect(function () {\n    console.log(data);\n\n    if (!data && donor[\"id\"]) {\n      var tags = [];\n      donor.preferredTags.forEach(function (tag) {\n        tags.push(tag.id);\n      });\n      donor.visitedTags.forEach(function (tag) {\n        tags.push(tag.id);\n      });\n      getProjects({\n        variables: {\n          where: {\n            tags_in: _.uniq(tags)\n          },\n          sort: \"createdAt:desc\",\n          limit: null,\n          start: 0\n        }\n      });\n    }\n  }, [data, donor]);\n\n  var handleFilter = function handleFilter() {\n    //console.log(\"Handle Filter:\", selectedTag,{});\n    if (selectedTag.length) {\n      console.log(\"if\");\n      getProjects({\n        variables: {\n          where: {\n            tags_in: selectedTag.map(function (tag) {\n              return tag.id;\n            })\n          },\n          sort: \"createdAt:desc\",\n          limit: null,\n          start: 0\n        }\n      });\n    } else {\n      console.log(\"else\");\n      getProjects({\n        variables: {\n          where: {},\n          sort: \"createdAt:desc\",\n          limit: null,\n          start: 0\n        }\n      });\n    }\n  };\n\n  return __jsx(ThemeProvider, {\n    theme: charityTheme\n  }, __jsx(Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"Recommended Projects | Esaar\"), __jsx(\"meta\", {\n    name: \"Description\",\n    content: \"React next landing page\"\n  }), __jsx(\"meta\", {\n    name: \"theme-color\",\n    content: \"#FCF22B\"\n  }), __jsx(\"meta\", {\n    name: \"viewport\",\n    content: \"width=device-width, initial-scale=1.0\"\n  }), __jsx(\"link\", {\n    href: \"https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700,800&display=swap\",\n    rel: \"stylesheet\"\n  })), __jsx(ResetCSS, null), __jsx(GlobalStyle, null), __jsx(CharityWrapper, null, __jsx(Sticky, {\n    top: 0,\n    innerZ: 9999,\n    activeClass: \"sticky-nav-active\"\n  }, __jsx(Navbar, null)), __jsx(DrawerProvider, null, __jsx(DrawerSection, null)), __jsx(ContentWrapper, null, __jsx(Container, {\n    maxWidth: \"lg\",\n    style: {\n      marginTop: \"140px\",\n      height: \"100%\",\n      paddingBottom: \"40px\"\n    }\n  }, __jsx(Grid, {\n    item: true,\n    style: {\n      marginBottom: \"20px\"\n    },\n    md: 12\n  }, __jsx(\"img\", {\n    src: \"/image/charity/recommended.jpg\",\n    style: {\n      objectFit: \"cover\",\n      width: \"100%\",\n      height: \"400px\"\n    }\n  })), __jsx(Grid, {\n    item: true,\n    style: {\n      marginBottom: \"20px\"\n    },\n    md: 12\n  }, __jsx(Heading, {\n    content: \"Recommended Projects\",\n    as: \"h1\",\n    color: \"secondary\"\n  })), __jsx(Grid, {\n    container: true,\n    alignItems: \"flex-start\",\n    spacing: 4\n  }, data ? __jsx(Grid, {\n    container: true,\n    item: true,\n    md: 12,\n    spacing: 4\n  }, data.projects.map(function (project) {\n    return __jsx(Grid, {\n      item: true,\n      md: 3,\n      key: project.id\n    }, __jsx(Paper, null, __jsx(ProjectCard, {\n      project: project\n    })));\n  })) : __jsx(Box, {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: 1,\n    style: {\n      height: \"100vh\"\n    }\n  }, __jsx(CircularProgress, {\n    color: \"secondary\"\n  }))))), __jsx(Footer, null))));\n});","map":null,"metadata":{},"sourceType":"module"}